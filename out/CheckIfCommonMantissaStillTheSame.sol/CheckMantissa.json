{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "target",
          "type": "uint256"
        }
      ],
      "name": "acceptableInterval",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "adminProxy",
      "outputs": [
        {
          "internalType": "contract ProxyAdmin",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "agEur",
      "outputs": [
        {
          "internalType": "contract ERC20DecimalsMock",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "agEurMantissa",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "min",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "max",
          "type": "uint256"
        }
      ],
      "name": "bound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "result",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bytesToSend",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "val1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "val2",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mantissa",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expected",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "negative",
          "type": "bool"
        }
      ],
      "name": "checkPercentage",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "db",
      "outputs": [
        {
          "internalType": "contract Database",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "adjust",
          "type": "bool"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "rewind",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "skip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test18Decimals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test6Decimals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFailNoDecimalsFunction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "testFailOthersDecimals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "tip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "trez",
      "outputs": [
        {
          "internalType": "contract Treasury",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdc",
      "outputs": [
        {
          "internalType": "contract ERC20DecimalsMock",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdcMantissa",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultInterface",
      "outputs": [
        {
          "internalType": "contract KonkreteVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultRaw",
      "outputs": [
        {
          "internalType": "contract TransparentUpgradeableProxy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "106:2966:57:-:0;;;1572:26:7;;;-1:-1:-1;;1572:26:7;1594:4;1572:26;;;1533::58;;;-1:-1:-1;;1533:26:58;1549:10;1533:26;;;;;;1582:15;;1591:6;1582:15;:::i;:::-;1563:34;;;;;;;;;-1:-1:-1;;;;1563:34:58;;;;;;;1619:15;;:6;;;;;;1628;1619:15;:::i;:::-;1601:33;;;;;;;;;-1:-1:-1;;;;1601:33:58;;;;;;;1656:15;;:6;;;;;;1665;1656:15;:::i;:::-;1638:33;;;;;;;;;-1:-1:-1;;;;1638:33:58;;;;;;;1691:15;;:6;;;;;;1700;1691:15;:::i;:::-;1675:31;;;;;;;-1:-1:-1;;;1675:31:58;-1:-1:-1;;;;1675:31:58;;;;;;;1728:15;;:6;;;;;;1737;1728:15;:::i;:::-;1710:33;;;;;;;-1:-1:-1;;;1710:33:58;-1:-1:-1;;;;1710:33:58;;;;;;;1763:15;;:6;;;;;;1772;1763:15;:::i;:::-;1747:31;;;;;;;;;;;;;;;;;;;;1805:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1782:37:58;;;-1:-1:-1;;;;;;1782:37:58;-1:-1:-1;;;;;1782:37:58;;;;;;;;;;1824:121;;;;;;;;;;-1:-1:-1;;;;;;1848:10:58;;;-1:-1:-1;1848:10:58;;;498:25:67;1824:121:58;-1:-1:-1;;;;;;;;;;;1848:7:58;471:18:67;;;1848:10:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1824:121:58;;;1864:10;;-1:-1:-1;;;;;;1864:10:58;;1872:1;1864:10;;;498:25:67;1824:121:58;;;;;-1:-1:-1;;;;;;;;;;;217:64:8;1864:7:58;;471:18:67;;1864:10:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1824:121:58;;;1880:10;;-1:-1:-1;;;;;;1880:10:58;;1888:1;1880:10;;;498:25:67;1824:121:58;;;;;-1:-1:-1;;;;;;;;;;;217:64:8;1880:7:58;;471:18:67;;1880:10:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1824:121:58;;;1896:10;;-1:-1:-1;;;;;;1896:10:58;;1904:1;1896:10;;;498:25:67;1824:121:58;;;;;-1:-1:-1;;;;;;;;;;;217:64:8;1896:7:58;;471:18:67;;1896:10:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1824:121:58;;;;;1920:4;;;1824:121;;;;;1931:10;;-1:-1:-1;;;;;;1931:10:58;;1939:1;1931:10;;;498:25:67;1824:121:58;;;-1:-1:-1;;;;;;;;;;;217:64:8;1931:7:58;;471:18:67;;1931:10:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1824:121:58;;;;;;;;;:::i;:::-;-1:-1:-1;1949:31:58;;;;;;;;;1974:4;1949:31;;;;;;;;:::i;:::-;-1:-1:-1;2018:10:58;;2005:29;;-1:-1:-1;;;;;2018:10:58;;;;2030:3;;2005:29;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1984:50:58;;;-1:-1:-1;;;;;;1984:50:58;-1:-1:-1;;;;;1984:50:58;;;;;;;;;;2122:40;;2160:1;;2122:40;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2090:72:58;;;-1:-1:-1;;;;;;2090:72:58;-1:-1:-1;;;;;2090:72:58;;;;;;;;;;2203:48;;;;;:::i;:::-;4005:2:67;3987:21;;;4044:2;4024:18;;;4017:30;-1:-1:-1;;;4078:3:67;4063:19;;4056:41;4135:3;4128:4;4113:20;;4106:33;;;4176:1;4155:19;;;4148:30;-1:-1:-1;;;4209:3:67;4194:19;;4187:36;4307:4;4295:17;;;-1:-1:-1;4275:18:67;;4268:45;4255:3;4240:19;2203:48:58;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2166:85:58;;;-1:-1:-1;;;;;;2166:85:58;-1:-1:-1;;;;;2166:85:58;;;;;;;;;;2286:3;2256:33;;2324:4;2293:35;;2406:3;2376:33;;2444:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2413:47:58;;;-1:-1:-1;;;;;;2413:47:58;-1:-1:-1;;;;;2413:47:58;;;;;;;;;;2491:12;;;-1:-1:-1;2491:12:58;;;;;;;;;2464:39;;;;;;:::i;:::-;;2545:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2507:57:58;;;-1:-1:-1;;;;;;2507:57:58;-1:-1:-1;;;;;2507:57:58;;;;;;2673:4;;2742:10;;;2760;;2786:2;;2862:9;;2593:309;;2673:4;;;2593:309;;;5612:51:67;5600:3;5679:18;;;5672:30;5718:18;;;5711:30;;;;-1:-1:-1;;;5757:19:67;;;5750:44;5813:3;5832:18;;;5825:30;4533:1;5908:18;;;4521:14;-1:-1:-1;;;4551:14:67;;;4544:29;4589:12;5943:18;;;5936:50;4689:2;4589:12;;;4677:15;-1:-1:-1;;;4708:14:67;;;4701:36;2742:10:58;;;6076:19:67;;;1775:44;2760:10:58;;6132:19:67;;;1775:44;2786:2:58;;;6188:19:67;;;1775:44;2805:12:58;6244:19:67;;;4830:44;;;6300:19;;;4830:44;2862:9:58;;;;;;6355:19:67;;;4938:35;2887:8:58;;;;;;;6410:19:67;;;4938:35;-1:-1:-1;;;2623:34:58;4753:12:67;;2593:309:58;;;-1:-1:-1;;2593:309:58;;;;;;;;;;;;;;-1:-1:-1;;;;;2593:309:58;-1:-1:-1;;;;;;2593:309:58;;;;;;;;;2568:334;;;;;;:::i;:::-;-1:-1:-1;3003:14:58;;3034:10;;2956:115;;-1:-1:-1;;;;;3003:14:58;;;;3034:10;;;;3053:12;;2956:115;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2906:165:58;;;-1:-1:-1;;;;;2906:165:58;;;;-1:-1:-1;;;;;;2906:165:58;;;;;;;;3075:56;;;;;;;;;106:2966:57;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;106:2966:57;-1:-1:-1;;;;;106:2966:57;;;;;;;;;;;-1:-1:-1;106:2966:57;;;;;;;-1:-1:-1;106:2966:57;;;-1:-1:-1;106:2966:57;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;106:2966:57;-1:-1:-1;;;;;106:2966:57;;;;;;;;;;;-1:-1:-1;106:2966:57;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:325:67;53:3;81:10;118:2;115:1;111:10;148:2;145:1;141:10;179:3;175:2;171:12;166:3;163:21;160:144;;;226:10;221:3;217:20;214:1;207:31;261:4;258:1;251:15;289:4;286:1;279:15;160:144;320:13;;14:325;-1:-1:-1;;;;14:325:67:o;534:290::-;604:6;657:2;645:9;636:7;632:23;628:32;625:52;;;673:1;670;663:12;625:52;699:16;;-1:-1:-1;;;;;744:31:67;;734:42;;724:70;;790:1;787;780:12;724:70;813:5;534:290;-1:-1:-1;;;534:290:67:o;2133:782::-;2300:4;2348:2;2337:9;2333:18;2387:1;2383;2378:3;2374:11;2370:19;2428:2;2420:6;2416:15;2405:9;2398:34;2451:2;2489;2484;2473:9;2469:18;2462:30;2512:6;2547;2541:13;2578:6;2570;2563:22;2616:2;2605:9;2601:18;2594:25;;2638:6;2635:1;2628:17;2681:2;2678:1;2668:16;2654:30;;2702:1;2712:177;2726:6;2723:1;2720:13;2712:177;;;2791:13;;2787:22;;2775:35;;2877:1;2865:14;;;;2830:12;;;;2741:9;2712:177;;;-1:-1:-1;2906:3:67;;2133:782;-1:-1:-1;;;;;;;;2133:782:67:o;3077:585::-;3414:2;3403:9;3396:21;3377:4;3440:49;3485:2;3474:9;3470:18;2997:1;2985:14;;-1:-1:-1;;;3024:4:67;3015:14;;3008:30;3063:2;3054:12;;2920:152;3440:49;3537:9;3529:6;3525:22;3520:2;3509:9;3505:18;3498:50;3565:37;3595:6;2997:1;2985:14;;-1:-1:-1;;;3024:4:67;3015:14;;3008:30;3063:2;3054:12;;2920:152;3565:37;3557:45;;;3650:4;3642:6;3638:17;3633:2;3622:9;3618:18;3611:45;3077:585;;;;:::o;6441:380::-;6520:1;6516:12;;;;6563;;;6584:61;;6638:4;6630:6;6626:17;6616:27;;6584:61;6691:2;6683:6;6680:14;6660:18;6657:38;6654:161;;6737:10;6732:3;6728:20;6725:1;6718:31;6772:4;6769:1;6762:15;6800:4;6797:1;6790:15;6654:161;;6441:380;;;:::o;6826:1404::-;-1:-1:-1;;;;;7064:15:67;;;7046:34;;7137:15;;7099:2;7117:18;;;7110:43;;;;7189:2;7184;7169:18;;7162:30;7239:13;;6989:4;;;;7035:1;7317:18;;;;7370;;;;7397:61;;7451:4;7443:6;7439:17;7429:27;;7397:61;7504:2;7496:6;7493:14;7473:18;7470:38;7467:165;;-1:-1:-1;;;7531:33:67;;7587:4;7584:1;7577:15;7617:4;7538:3;7605:17;7467:165;7714:2;7699:18;;1928:19;;;1971:14;;;7742:18;7769:100;;;;7883:1;7878:326;;;;7735:469;;7769:100;-1:-1:-1;;7802:24:67;;7790:37;;7847:12;;;;-1:-1:-1;7769:100:67;;7878:326;2080:1;2073:14;;;2117:4;2104:18;;7984:1;7998:165;8012:6;8009:1;8006:13;7998:165;;;8090:14;;8077:11;;;8070:35;8133:16;;;;8027:10;;7998:165;;;8183:11;;;-1:-1:-1;;7735:469:67;-1:-1:-1;8221:3:67;;6826:1404;-1:-1:-1;;;;;;;;;;;6826:1404:67:o;:::-;106:2966:57;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "106:2966:57:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1893:677;;;;;;:::i;:::-;;:::i;:::-;;3210:866:58;;;:::i;1979:116:9:-;;;;;;:::i;:::-;;:::i;2166:85:58:-;;;;;-1:-1:-1;;;;;2166:85:58;;;;;;-1:-1:-1;;;;;1007:32:67;;;989:51;;977:2;962:18;2166:85:58;;;;;;;;1326:96:9;;;;;;:::i;:::-;;:::i;149:873:57:-;;;:::i;2906:165:58:-;;;;;-1:-1:-1;;;;;2906:165:58;;;1540:120:9;;;;;;:::i;:::-;;:::i;5041:455::-;;;;;;:::i;:::-;;:::i;1178:85::-;;;;;;:::i;:::-;;:::i;2464:39:58:-;;;:::i;:::-;;;;;;;:::i;288:38:8:-;;-1:-1:-1;;;;;;;;;;;288:38:8;;2350:140:9;;;;;;:::i;:::-;;:::i;2090:72:58:-;;;;;-1:-1:-1;;;;;2090:72:58;;;1984:50;;;;;-1:-1:-1;;;;;1984:50:58;;;4313:568:9;;;;;;:::i;:::-;;:::i;:::-;;;5993:25:67;;;5981:2;5966:18;4313:568:9;5847:177:67;2507:57:58;;;;;-1:-1:-1;;;;;2507:57:58;;;3279:107:9;;;;;;:::i;:::-;;:::i;1867:106::-;;;;;;:::i;:::-;;:::i;2574:496:57:-;;;:::i;3392:915:9:-;;;;;;:::i;:::-;;:::i;5502:406::-;;;;;;:::i;:::-;;:::i;1026:863:57:-;;;:::i;2293:35:58:-;;;;;;846:215;;;;;;:::i;:::-;;:::i;:::-;;;7590:14:67;;7583:22;7565:41;;7553:2;7538:18;846:215:58;7425:187:67;1666:130:9;;;;;;:::i;:::-;;:::i;1089:83::-;;;;;;:::i;:::-;;:::i;1819:584:7:-;;;:::i;2256:33:58:-;;;;;;1065:464;;;;;;:::i;:::-;;:::i;2413:47::-;;;;;-1:-1:-1;;;;;2413:47:58;;;3074:81:9;;;;;;:::i;:::-;;:::i;2214:130::-;;;;;;:::i;:::-;;:::i;2038:47:58:-;;-1:-1:-1;;2038:47:58;;2642:341:9;;;;;;:::i;:::-;;:::i;1428:106::-;;;;;;:::i;:::-;;:::i;1782:37:58:-;;;;;-1:-1:-1;;;;;1782:37:58;;;1572:26:7;;;;;;;;;1893:677:57;1969:2;1958:8;:13;;;1954:33;;;1973:14;1985:2;1973:14;;:::i;:::-;;;1954:33;-1:-1:-1;;;;;;;;;;;1993:9:57;2015:2;2003:14;;;;;;;:31;;;2021:8;:13;;2033:1;2021:13;;2003:31;1993:42;;;;;;;;;;;;;7590:14:67;7583:22;7565:41;;7553:2;7538:18;;7425:187;1993:42:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2041:24;2106:8;2068:47;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2041:74:57;-1:-1:-1;2122:26:57;-1:-1:-1;;;2041:74:57;2301:4;674:1:58;2301:10:57;;2327:2;;2403:9;;2151:292;;;;;-1:-1:-1;;;;;2301:10:57;;;;2327:2;;2346:12;;;;2403:9;;;;;;;-1:-1:-1;;;2428:8:57;;;;;2151:292;;;:::i;:::-;;;;-1:-1:-1;;2151:292:57;;;;;;;;;;;;;;-1:-1:-1;;;;;2151:292:57;-1:-1:-1;;;;;;2151:292:57;;;;;;;;;;2496:14;;2527:10;;2449:116;;2151:292;;-1:-1:-1;;;;;;2496:14:57;;;;2527:10;;2151:292;;2449:116;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1948:622;;1893:677;:::o;3210:866:58:-;3257:12;;3240:14;:29;3275:2;;3296:9;;3275:31;;-1:-1:-1;;;3275:31:58;;595:19;3275:31;;;12359:25:67;-1:-1:-1;;;;;3296:9:58;;;12400:18:67;;;12393:60;3275:2:58;;;:12;;12332:18:67;;3275:31:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3312:2:58;;:48;;-1:-1:-1;;;3312:48:58;;3325:19;3312:48;;;12359:25:67;3354:4:58;12400:18:67;;;12393:60;-1:-1:-1;;;;;3312:2:58;;;;-1:-1:-1;3312:12:58;;-1:-1:-1;12332:18:67;;3312:48:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3394:4:58;;3426:6;3404:19;:28;;;3470:14;;-1:-1:-1;;;;;3394:4:58;;;;-1:-1:-1;3448:36:58;;-1:-1:-1;3448:36:58;:::i;:::-;3438:7;:46;-1:-1:-1;;;;;3490:17:58;:37;3542:10;;3533:20;;-1:-1:-1;;;3533:20:58;;-1:-1:-1;;;;;3542:10:58;;;3533:20;;;989:51:67;-1:-1:-1;;;;;;;;;;;217:64:8;3533:8:58;;962:18:67;;3533:20:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3559:5:58;;3644:14;;3622:19;;-1:-1:-1;;;;;3559:5:58;;;;-1:-1:-1;3559:29:58;;-1:-1:-1;3559:5:58;;3622:36;;3644:14;3622:36;:::i;:::-;3559:106;;-1:-1:-1;;;;;;3559:106:58;;;;;;;-1:-1:-1;;;;;13014:15:67;;;3559:106:58;;;12996:34:67;13066:15;;13046:18;;;13039:43;12916:18;;3559:106:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3679:6:58;;3671:15;;-1:-1:-1;;;3671:15:58;;3679:6;;;;3671:15;;;13238:42:67;-1:-1:-1;;;;;;;;;;;217:64:8;-1:-1:-1;3671:7:58;;-1:-1:-1;13211:18:67;;3671:15:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3697:9;3692:380;3716:1;3712;:5;3692:380;;;-1:-1:-1;;;;;;;;;;;3732:13:58;3746:4;3751:1;3746:7;;;;;;;:::i;:::-;;;3732:22;;;;;;-1:-1:-1;;;;;;3732:22:58;;;-1:-1:-1;;;;;3746:7:58;;;3732:22;;;989:51:67;962:18;;3732:22:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;701:1;3766;:9;3762:137;;3787:4;;-1:-1:-1;;;;;3787:4:58;:9;3797:4;3802:1;3797:7;;;;;;;:::i;:::-;;;3806:17;;3787:37;;-1:-1:-1;;;;;;3787:37:58;;;;;;;;;-1:-1:-1;;;;;3797:7:58;;3806:17;3787:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3834:5:58;;-1:-1:-1;;;;;3834:5:58;;-1:-1:-1;3834:10:58;;-1:-1:-1;3845:4:58;3850:1;3845:7;;;;;;;:::i;:::-;;;3876:13;;3854:19;;-1:-1:-1;;;;;3845:7:58;;;;3854:35;;3876:13;3854:35;:::i;:::-;3834:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3762:137;3906:5;;3928;;3906:34;;-1:-1:-1;;;3906:34:58;;-1:-1:-1;;;;;3906:5:58;;;;:13;;:34;;3928:5;;;-1:-1:-1;;2068:17:58;3906:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3948:4:58;;3969:5;;3948:33;;-1:-1:-1;;;3948:33:58;;-1:-1:-1;;;;;3948:4:58;;;;:12;;:33;;3969:5;;;-1:-1:-1;;2068:17:58;3948:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3989:14:58;;;-1:-1:-1;;;3989:14:58;;;;-1:-1:-1;;;;;;;;;;;217:64:8;3989:12:58;;:14;;;;;241:37:8;;3989:14:58;;;;;;;241:37:8;217:64;3989:14:58;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4011:2:58;;-1:-1:-1;;;;;4011:2:58;;-1:-1:-1;4011:15:58;;-1:-1:-1;4027:4:58;4032:1;4027:7;;;;;;;:::i;:::-;;;4011:24;;;;;;-1:-1:-1;;;;;;4011:24:58;;;-1:-1:-1;;;;;4027:7:58;;;4011:24;;;989:51:67;962:18;;4011:24:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4043:2:58;;-1:-1:-1;;;;;4043:2:58;;-1:-1:-1;4043:9:58;;-1:-1:-1;4053:4:58;4058:1;4053:7;;;;;;;:::i;:::-;;;4043:22;;;;;;-1:-1:-1;;;;;;4043:22:58;;;-1:-1:-1;;;;;4053:7:58;;;4043:22;;;14002:51:67;4062:2:58;14069:18:67;;;14062:47;13975:18;;4043:22:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3719:3;;;;;:::i;:::-;;;;3692:380;;;;3234:842;3210:866::o;1979:116:9:-;2042:18;;-1:-1:-1;;;2042:18:9;;-1:-1:-1;;;;;;;;;;;217:64:8;2042:7:9;;:18;;2050:3;;2055:4;;2042:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2070:18:9;;-1:-1:-1;;;2070:18:9;;-1:-1:-1;;;;;1007:32:67;;2070:18:9;;;989:51:67;-1:-1:-1;;;;;;;;;;;217:64:8;-1:-1:-1;2070:13:9;;-1:-1:-1;962:18:67;;2070::9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1979:116;;:::o;1326:96::-;1370:22;;-1:-1:-1;;;1370:22:9;;-1:-1:-1;;;;;;;;;;;217:64:8;1370:7:9;;:22;;1378:3;;-1:-1:-1;;;1383:8:9;1370:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1402:13:9;;-1:-1:-1;;;1402:13:9;;-1:-1:-1;;;;;1007:32:67;;1402:13:9;;;989:51:67;-1:-1:-1;;;;;;;;;;;217:64:8;-1:-1:-1;1402:8:9;;-1:-1:-1;962:18:67;;1402:13:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;149:873:57;188:26;255:2;217:41;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;447:10:57;;465;;491:2;;567:9;;295:312;;;-1:-1:-1;;;;;15860:15:67;;;295:312:57;;;15842:34:67;15792:3;15892:18;;;15885:30;9831:2;15968:18;;;9819:15;-1:-1:-1;;;9850:14:67;;;9843:38;9897:12;16003:18;;;15996:50;674:1:58;9897:12:67;;;9985:14;-1:-1:-1;;;10015:14:67;;;10008:29;10053:12;16122:18;;;16115:50;447:4:57;10053:12:67;;;10141:15;-1:-1:-1;;;10172:14:67;;;;10165:36;;;;447:10:57;;;16235:19:67;;;16228:44;465:10:57;;;16288:19:67;;;16281:44;491:2:57;;;16341:19:67;;;16334:44;510:12:57;16447:19:67;;;16440:44;;;16500:19;;;16493:44;567:9:57;;;;;;;16572:19:67;;;10293:35;-1:-1:-1;;;592:8:57;;;;;;16627:19:67;;;10293:35;295:312:57;;;;;;;;;;10217:12:67;;;;295:312:57;;-1:-1:-1;295:312:57;;;;-1:-1:-1;;;;;295:312:57;-1:-1:-1;;;295:312:57;;;728:14;;763:10;;677:133;;15860:15:67;;-1:-1:-1;295:312:57;;-1:-1:-1;;728:14:57;;;763:10;;;;;295:312;;677:133;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;613:211;;860:8;-1:-1:-1;;;;;860:17:57;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;838:41;;:7;-1:-1:-1;;;;;838:16:57;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;;830:69;;;;-1:-1:-1;;;830:69:57;;17112:2:67;830:69:57;;;17094:21:67;17151:2;17131:18;;;17124:30;-1:-1:-1;;;17170:18:67;;;17163:45;17225:18;;830:69:57;;;;;;;;;953:8;-1:-1:-1;;;;;953:17:57;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;947:25;;:2;:25;:::i;:::-;920:7;-1:-1:-1;;;;;920:21:57;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;905:112;;;;-1:-1:-1;;;905:112:57;;19028:2:67;905:112:57;;;19010:21:67;19067:2;19047:18;;;19040:30;19106:31;19086:18;;;19079:59;19155:18;;905:112:57;18826:353:67;905:112:57;182:840;;;149:873::o;1540:120:9:-;1600:22;;-1:-1:-1;;;1600:22:9;;-1:-1:-1;;;;;;;;;;;217:64:8;1600:7:9;;:22;;1608:3;;-1:-1:-1;;;1613:8:9;1600:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1632:21:9;;-1:-1:-1;;;1632:21:9;;-1:-1:-1;;;;;19414:15:67;;;1632:21:9;;;19396:34:67;19466:15;;19446:18;;;19439:43;-1:-1:-1;;;;;;;;;;;217:64:8;-1:-1:-1;1632:8:9;;-1:-1:-1;19331:18:67;;1632:21:9;19184:304:67;5041:455:9;5201:16;;-1:-1:-1;;;5201:16:9;;5132:12;;;;-1:-1:-1;;;;;;;;;;;217:64:8;5201:10:9;;:16;;5212:4;;5201:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5201:16:9;;;;;;;;;;;;:::i;:::-;5219:4;5184:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5160:64;;5345:8;5339:15;5332:4;5322:8;5318:19;5315:1;5308:47;5300:55;-1:-1:-1;;;;;;5396:18:9;;5375:114;;;;-1:-1:-1;;;5375:114:9;;21030:2:67;5375:114:9;;;21012:21:67;21069:2;21049:18;;;21042:30;21108:34;21088:18;;;21081:62;-1:-1:-1;;;21159:18:67;;;21152:47;21216:19;;5375:114:9;20828:413:67;5375:114:9;5150:346;5041:455;;;;:::o;1178:85::-;-1:-1:-1;;;;;;;;;;;1225:7:9;1233:22;1251:4;1233:15;:22;:::i;:::-;1225:31;;;;;;;;;;;;;5993:25:67;;5981:2;5966:18;;5847:177;2464:39:58;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2350:140:9:-;2429:18;;-1:-1:-1;;;2429:18:9;;-1:-1:-1;;;;;;;;;;;217:64:8;2429:7:9;;:18;;2437:3;;2442:4;;2429:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2457:26:9;;-1:-1:-1;;;2457:26:9;;-1:-1:-1;;;;;19414:15:67;;;2457:26:9;;;19396:34:67;19466:15;;19446:18;;;19439:43;-1:-1:-1;;;;;;;;;;;217:64:8;-1:-1:-1;2457:13:9;;-1:-1:-1;19331:18:67;;2457:26:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2350:140;;;:::o;4313:568::-;4381:14;4422:3;4415;:10;;4407:81;;;;-1:-1:-1;;;4407:81:9;;21963:2:67;4407:81:9;;;21945:21:67;22002:2;21982:18;;;21975:30;22041:34;22021:18;;;22014:62;22112:28;22092:18;;;22085:56;22158:19;;4407:81:9;21761:422:67;4407:81:9;4499:12;4514:9;4520:3;4514;:9;:::i;:::-;4499:24;;4538:4;4546:1;4538:9;4534:287;;4580:3;4571:12;;4534:287;;;-1:-1:-1;;4612:4:9;:19;4608:213;;4664:1;4655:10;;4608:213;;;4712:6;;;:::i;:::-;;-1:-1:-1;4756:11:9;4770:8;4712:6;4770:1;:8;:::i;:::-;4756:22;-1:-1:-1;4801:9:9;4756:22;4801:3;:9;:::i;:::-;4792:18;;4698:123;4608:213;4836:38;;;22650:21:67;;;22707:2;22687:18;;;22680:30;-1:-1:-1;;;22741:2:67;22726:18;;22719:42;22828:4;22813:20;;22806:36;;;4836:38:9;;;;;;;22793:3:67;4836:38:9;;;4397:484;4313:568;;;;;:::o;3279:107::-;3351:28;3356:5;3363:2;3367:4;3373:5;3351:4;:28::i;1867:106::-;1916:22;;-1:-1:-1;;;1916:22:9;;-1:-1:-1;;;;;;;;;;;217:64:8;1916:7:9;;:22;;1924:3;;-1:-1:-1;;;1929:8:9;1916:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1948:18:9;;-1:-1:-1;;;1948:18:9;;-1:-1:-1;;;;;1007:32:67;;1948:18:9;;;989:51:67;-1:-1:-1;;;;;;;;;;;217:64:8;-1:-1:-1;1948:13:9;;-1:-1:-1;962:18:67;;1948::9;818:228:67;2574:496:57;2625:26;-1:-1:-1;;;2734:3:57;2801:4;674:1:58;2801:10:57;;2827:2;;2903:9;;2654:289;;;;;-1:-1:-1;;;;;2801:10:57;;;;2827:2;;2846:12;;;;2903:9;;;;;;;-1:-1:-1;;;2928:8:57;;;;;2654:289;;;:::i;:::-;;;;-1:-1:-1;;2654:289:57;;;;;;;;;;;;;;-1:-1:-1;;;;;2654:289:57;-1:-1:-1;;;;;;2654:289:57;;;;;;;;;;2996:14;;3027:10;;2949:116;;2654:289;;-1:-1:-1;;;;;;2996:14:57;;;;3027:10;;2654:289;;2949:116;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3392:915:9;3546:38;;;-1:-1:-1;;;;;1007:32:67;;;3546:38:9;;;;989:51:67;;;;3546:38:9;;;;;;;;;;962:18:67;;;;3546:38:9;;;;;;;-1:-1:-1;;;;;3546:38:9;-1:-1:-1;;;3546:38:9;;;3535:50;;3511:20;;3535:10;;;:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3508:77;;;3595:15;3624:7;3613:30;;;;;;;;;;;;:::i;:::-;3595:48;-1:-1:-1;3680:123:9;3798:4;3680:90;3767:2;3680:64;-1:-1:-1;;;3680:35:9;:8;3709:5;3680:28;:35::i;:::-;:52;18902:9;;;:16;;-1:-1:-1;;18902:16:9;;;;;;;;;;;;:9;18803:143;3680:64;:86;19218:10;;;:47;;;;;;;-1:-1:-1;19218:47:9;;;;;;;-1:-1:-1;;;;;19242:21:9;;;;19218:47;;;:10;19114:179;3680:90;:117;;:123::i;:::-;3848:6;3845:456;;;3910:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3910:34:9;-1:-1:-1;;;3910:34:9;;;3899:46;;3872:23;;-1:-1:-1;;;;;3899:10:9;;;:46;;3910:34;3899:46;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3869:76;;;3959:14;3987:10;3976:33;;;;;;;;;;;;:::i;:::-;3959:50;;4033:7;4026:4;:14;4023:143;;;4071:14;4081:4;4071:7;:14;:::i;:::-;4060:26;;;;:::i;:::-;;;4023:143;;;4136:14;4143:7;4136:4;:14;:::i;:::-;4125:26;;;;:::i;:::-;;;4023:143;4179:111;4283:6;4179:72;-1:-1:-1;;;4179:39:9;:8;4212:5;4179:32;:39::i;:111::-;3855:446;;3467:840;;3392:915;;;;:::o;5502:406::-;5626:16;;-1:-1:-1;;;5626:16:9;;5574:12;;;;-1:-1:-1;;;;;;;;;;;217:64:8;5626:10:9;;:16;;5637:4;;5626:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5626:16:9;;;;;;;;;;;;:::i;:::-;5602:40;;5763:8;5757:15;5750:4;5740:8;5736:19;5733:1;5726:47;5718:55;-1:-1:-1;;;;;;5814:18:9;;5793:108;;;;-1:-1:-1;;;5793:108:9;;23334:2:67;5793:108:9;;;23316:21:67;23373:2;23353:18;;;23346:30;23412:34;23392:18;;;23385:62;-1:-1:-1;;;23463:18:67;;;23456:41;23514:19;;5793:108:9;23132:407:67;5793:108:9;5592:316;5502:406;;;:::o;1026:863:57:-;1064:25;1130:1;1092:40;;;;;:::i;846:215:58:-;939:4;525:1;960:6;:20;:54;;;-1:-1:-1;994:20:58;525:1;994:6;:20;:::i;:::-;984:6;:30;;960:54;959:96;;;;-1:-1:-1;1035:20:58;525:1;1035:6;:20;:::i;:::-;1025:6;:30;;959:96;951:105;;846:215;;;;;:::o;1666:130:9:-;1740:18;;-1:-1:-1;;;1740:18:9;;-1:-1:-1;;;;;;;;;;;217:64:8;1740:7:9;;:18;;1748:3;;1753:4;;1740:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1768:21:9;;-1:-1:-1;;;1768:21:9;;-1:-1:-1;;;;;19414:15:67;;;1768:21:9;;;19396:34:67;19466:15;;19446:18;;;19439:43;-1:-1:-1;;;;;;;;;;;217:64:8;-1:-1:-1;1768:8:9;;-1:-1:-1;19331:18:67;;1768:21:9;19184:304:67;1089:83:9;-1:-1:-1;;;;;;;;;;;1134:7:9;1142:22;1160:4;1142:15;:22;:::i;1819:584:7:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:7;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2978:55:7;3059:16;1980:374;;2196:43;;2023:20;;-1:-1:-1;;;;;;;;;;;1671:64:7;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:7;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:7;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:7;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:7:o;1065:464:58:-;1214:4;1238;1231;:11;:23;;;;;1246:8;1231:23;1230:55;;;;1267:4;1260;:11;:24;;;;;1276:8;1275:9;1260:24;1226:73;;;-1:-1:-1;1294:5:58;1287:12;;1226:73;1305:19;1327:14;1338:3;1327:8;:14;:::i;:::-;1305:36;-1:-1:-1;1347:19:58;1305:36;1347:19;;:::i;:::-;;-1:-1:-1;1372:19:58;1380:11;1372:19;;:::i;:::-;;;1397:11;1411:8;:36;;1436:11;1443:4;1436;:11;:::i;:::-;1411:36;;;1422:11;1429:4;1422;:11;:::i;:::-;1397:50;;1453:23;;;;;;;;;;;;;;-1:-1:-1;;;1453:23:58;;;1472:3;1453:11;:23::i;:::-;1490:33;1509:3;1514:8;1490:18;:33::i;:::-;1482:42;;;;1065:464;;;;;;;;:::o;3074:81:9:-;3131:17;;-1:-1:-1;;;3131:17:9;;-1:-1:-1;;;;;;;;;;;217:64:8;3131:7:9;;:17;;3139:2;;3143:4;;3131:17;;;:::i;2214:130::-;2279:22;;-1:-1:-1;;;2279:22:9;;-1:-1:-1;;;;;;;;;;;217:64:8;2279:7:9;;:22;;2287:3;;-1:-1:-1;;;2292:8:9;2279:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2311:26:9;;-1:-1:-1;;;2311:26:9;;-1:-1:-1;;;;;19414:15:67;;;2311:26:9;;;19396:34:67;19466:15;;19446:18;;;19439:43;-1:-1:-1;;;;;;;;;;;217:64:8;-1:-1:-1;2311:13:9;;-1:-1:-1;19331:18:67;;2311:26:9;19184:304:67;2642:341:9;2718:125;;;;;25217:2:67;25199:21;;;25256:1;25236:18;;;25229:29;-1:-1:-1;;;25289:2:67;25274:18;;25267:37;25342:3;25335:4;25320:20;;25313:33;;;25383:2;25362:19;;;25355:31;25423:34;25417:3;25402:19;;25395:63;25495:34;25489:3;25474:19;;25467:63;25567:32;25561:3;25546:19;;25539:61;25632:3;25617:19;;24914:728;2718:125:9;;;;;;;;2853:123;2971:4;2853:90;2940:2;2853:64;-1:-1:-1;;;2853:35:9;:8;2882:5;2853:28;:35::i;1428:106::-;1486:18;;-1:-1:-1;;;1486:18:9;;-1:-1:-1;;;;;;;;;;;217:64:8;1486:7:9;;:18;;1494:3;;1499:4;;1486:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1514:13:9;;-1:-1:-1;;;1514:13:9;;-1:-1:-1;;;;;1007:32:67;;1514:13:9;;;989:51:67;-1:-1:-1;;;;;;;;;;;217:64:8;-1:-1:-1;1514:8:9;;-1:-1:-1;962:18:67;;1514:13:9;818:228:67;18641:156:9;18747:12;;;:22;;-1:-1:-1;;;;;;18747:22:9;-1:-1:-1;;;;;18747:22:9;;;;;;;;;;:12;18641:156::o;19925:120::-;20005:33;20019:4;20033:3;20005:13;:33::i;6548:139:11:-;6612:68;6672:2;6676;6628:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6628:51:11;;;;;;;;;;;;;;-1:-1:-1;;;;;6628:51:11;-1:-1:-1;;;6628:51:11;;;6612:15;:68::i;20279:1089:9:-;20395:12;;;;20431:9;;;;20472:11;;;;20516:10;;;20493:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20395:12:9;;;;20431:9;;;;;;20381:11;;20493:33;;20516:10;;20493:33;;20516:10;20493:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20537:17;20574:4;20580:12;20588:3;20580:7;:12::i;:::-;20557:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;20557:36:9;;;;;;;;;-1:-1:-1;;;;;20608:15:9;;;;;;:10;;;20557:36;20608:15;;;;;;-1:-1:-1;;;;;;20608:21:9;;;;;;;;;20557:36;;-1:-1:-1;20608:21:9;;:15;;20640:34;;20657:3;;20662:11;;20640:34;;:::i;:::-;;;;-1:-1:-1;;20640:34:9;;;;;;;;;20630:45;;20640:34;20630:45;;;;20608:68;;;;;;;;;;-1:-1:-1;20608:68:9;;;;20603:110;;20692:10;20697:4;20692;:10::i;:::-;;20603:110;-1:-1:-1;;;;;20745:15:9;;20722:12;20745:15;;;;;;;;;;;-1:-1:-1;;;;;;20745:21:9;;;;;;;;;20777:34;;20745:21;;20722:12;;20777:34;;20794:3;;20799:11;;20777:34;;:::i;:::-;;;;;;;;;;;;;20767:45;;;;;;20745:68;;;;;;;;;;;;20737:77;;20722:92;;20825:12;20864:17;20885:3;-1:-1:-1;;;;;20885:14:9;20900:4;20885:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20861:44:9;-1:-1:-1;20926:36:9;;-1:-1:-1;20861:44:9;20947:14;20950:11;20947:2;:14;:::i;:::-;20926;:36::i;:::-;20997:28;;-1:-1:-1;;;20997:28:9;;20919:43;;-1:-1:-1;20982:12:9;;-1:-1:-1;;;;;;;;;;;;20997:17:9;;;:28;;21015:3;;21020:4;;20997:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20982:43;;21048:4;21040;:12;21036:172;;21068:129;;-1:-1:-1;;;21068:129:9;;;;;;;:::i;:::-;21217:34;;-1:-1:-1;;;21217:34:9;;-1:-1:-1;;;;;;;;;;;21217:18:9;;;:34;;21236:3;;21241:4;;21247:3;;21217:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21268:12:9;;;21261:19;;-1:-1:-1;;;;;;21261:19:9;;;-1:-1:-1;21297:9:9;;;21290:16;;-1:-1:-1;;21290:16:9;;;21316:17;-1:-1:-1;21323:10:9;;21268:12;21316:17;:::i;:::-;21350:4;:11;;21343:18;;;20371:997;;;;;;;;20279:1089;;:::o;181:376:11:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;22555:397:9:-;22614:12;22642:19;22674:1;:8;22685:2;22674:13;;;;:::i;:::-;22664:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22664:24:9;;22642:46;;22703:9;22698:224;22722:1;:8;22718:1;:12;22698:224;;;22751:9;22763:1;22765;22763:4;;;;;;;;:::i;:::-;;;;;;;22751:16;;22896:1;22890;22886:2;22882:10;22878:2;22874:19;22866:6;22862:32;22855:43;22837:75;22732:3;;;;;:::i;:::-;;;;22698:224;;15421:3214;15545:12;;;;15581:9;;;;15622:11;;;;15666:10;;;15643:33;;;;;;;;;;;;;;;;;;;15508:7;;-1:-1:-1;;;;;15545:12:9;;15581:9;;;15622:11;15508:7;;15643:33;;15666:10;;15643:33;;;15666:10;15643:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;15727:15:9;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;15727:21:9;;;;;;;;;15759:34;;15643:33;;-1:-1:-1;15727:21:9;:15;;-1:-1:-1;15759:34:9;;-1:-1:-1;15643:33:9;;15781:11;;15759:34;;:::i;:::-;;;;-1:-1:-1;;15759:34:9;;;;;;;;;15749:45;;15759:34;15749:45;;;;15727:68;;;;;;;;;;-1:-1:-1;15727:68:9;;;;15723:174;;;-1:-1:-1;;;;;15818:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;15818:21:9;;;;;;;;;15850:34;;15818:21;;:10;15850:34;;15867:3;;15872:11;;15850:34;;:::i;:::-;;;;;;;;;;;;;15840:45;;;;;;15818:68;;;;;;;;;;;;15811:75;;;;;;15421:3214;;;:::o;15723:174::-;15906:17;15943:4;15949:12;15957:3;15949:7;:12::i;:::-;15926:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15906:56;;-1:-1:-1;;;;;;;;;;;14695:37:9;;-1:-1:-1;;;;;15972:19:9;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16003:12;16042:17;16063:3;-1:-1:-1;;;;;16063:14:9;16078:4;16063:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16039:44:9;-1:-1:-1;16104:36:9;;-1:-1:-1;16039:44:9;16125:14;16128:11;16125:2;:14;:::i;16104:36::-;16190:35;;-1:-1:-1;;;16190:35:9;;-1:-1:-1;;;;;1007:32:67;;16190:35:9;;;989:51:67;16097:43:9;;-1:-1:-1;16162:22:9;;-1:-1:-1;;;;;;;;;;;;16190:21:9;;;962:18:67;;16190:35:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16190:35:9;;;;;;;;;;;;:::i;:::-;16161:64;;;16239:5;:12;16255:1;16239:17;16235:2058;;16272:12;-1:-1:-1;;;;;;;;;;;14695:37:9;;-1:-1:-1;;;;;16287:17:9;;16305:3;16310:5;16316:1;16310:8;;;;;;;;:::i;:::-;;;;;;;16287:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16272:47;-1:-1:-1;16272:47:9;16333:106;;16380:44;16401:3;16414:5;16420:1;16414:8;;;;;;;;:::i;:::-;;;;;;;16406:17;;16380:44;;;;;;;:::i;:::-;;;;;;;;16333:106;16464:4;16456;:12;16452:180;;16488:129;;-1:-1:-1;;;16488:129:9;;;;;;;:::i;:::-;16650:86;16660:3;16665:4;16698:3;16703:11;16681:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16671:45;;;;;;16726:5;16732:1;16726:8;;;;;;;;:::i;:::-;;;;;;;16718:17;;16650:86;;;;;;;;;:::i;:::-;;;;;;;;16829:5;16835:1;16829:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;16750:15:9;;16821:17;16750:15;;;;;;;;;;-1:-1:-1;;;;;;16750:21:9;;;;;;;;;16782:34;;16829:8;;16750:21;;16782:34;;16799:3;;16804:11;;16782:34;;:::i;:::-;;;;-1:-1:-1;;16782:34:9;;;;;;;;;16772:45;;16782:34;16772:45;;;;16750:68;;;;;;;;;;;;-1:-1:-1;16750:68:9;;;:88;;;;-1:-1:-1;;;;;16852:15:9;;;;16923:4;16852:10;;;:15;;;;;-1:-1:-1;;;;;;16852:21:9;;;;;;;;;16884:34;;16923:4;;-1:-1:-1;16884:34:9;;16901:3;;16906:11;;16884:34;;:::i;:::-;;;;;;;-1:-1:-1;;16884:34:9;;;;;;16874:45;;16884:34;16874:45;;;;16852:68;;;;;;;;;;-1:-1:-1;16852:68:9;:75;;-1:-1:-1;;16852:75:9;;;;;;;;;;-1:-1:-1;16235:2058:9;;;16963:1;16948:5;:12;:16;16944:1349;;;16985:9;16980:1190;17004:5;:12;17000:1;:16;16980:1190;;;17041:12;-1:-1:-1;;;;;;;;;;;14695:37:9;;-1:-1:-1;;;;;17056:17:9;;17074:3;17079:5;17085:1;17079:8;;;;;;;;:::i;:::-;;;;;;;17056:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17041:47;-1:-1:-1;17041:47:9;17106:114;;17157:44;17178:3;17191:5;17197:1;17191:8;;;;;;;;:::i;:::-;;;;;;;17183:17;;17157:44;;;;;;;:::i;:::-;;;;;;;;17106:114;-1:-1:-1;;;;;;;;;;;14695:37:9;;-1:-1:-1;;;;;17262:18:9;;17281:3;17286:5;17292:1;17286:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;17262:53:9;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17333:12;17363:17;17438:3;-1:-1:-1;;;;;17438:14:9;17453:4;17438:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17420:38:9;;-1:-1:-1;17420:38:9;-1:-1:-1;17487:36:9;17420:38;17508:14;17511:11;17508:2;:14;:::i;17487:36::-;17480:43;;17564:7;:37;;;;;-1:-1:-1;;;17575:4:9;:26;17564:37;17560:539;;;17699:86;17709:3;17714:4;17747:3;17752:11;17730:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17720:45;;;;;;17775:5;17781:1;17775:8;;;;;;;;:::i;:::-;;;;;;;17767:17;;17699:86;;;;;;;;;:::i;:::-;;;;;;;;17886:5;17892:1;17886:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;17807:15:9;;17878:17;17807:15;;;;;;;;;;-1:-1:-1;;;;;;17807:21:9;;;;;;;;;17839:34;;17886:8;;17807:21;;17839:34;;17856:3;;17861:11;;17839:34;;:::i;:::-;;;;;;;;;;;;;17829:45;;;;;;17807:68;;;;;;;;;;;:88;;;;17988:4;17917;:10;;:15;17928:3;-1:-1:-1;;;;;17917:15:9;-1:-1:-1;;;;;17917:15:9;;;;;;;;;;;;:21;17933:4;-1:-1:-1;;;;;17917:21:9;;-1:-1:-1;;;;;17917:21:9;;;;;;;;;;;;;:68;17966:3;17971:11;17949:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17939:45;;;;;;17917:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;14695:37:9;;-1:-1:-1;;;;;18014:18:9;;18033:3;18038:5;18044:1;18038:8;;;;;;;;:::i;:::-;;;;;;;18048:4;18014:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18075:5;;;;;17560:539;-1:-1:-1;;;;;;;;;;;14695:37:9;;-1:-1:-1;;;;;18116:18:9;;18135:3;18140:5;18146:1;18140:8;;;;;;;;:::i;:::-;;;;;;;18150:4;18116:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17023:1147;;;17018:3;;;;;:::i;:::-;;;;16980:1190;;;;16944:1349;;;18200:82;;;-1:-1:-1;;;18200:82:9;;29639:2:67;18200:82:9;;;29621:21:67;29658:18;;;29651:30;;;;29717:34;29697:18;;;29690:62;29788:34;29768:18;;;29761:62;29840:19;;18200:82:9;29437:428:67;18200:82:9;-1:-1:-1;;;;;18311:15:9;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;18311:21:9;;;;;;;;;18343:34;;18311:21;;:15;18343:34;;18360:3;;18365:11;;18343:34;;:::i;:::-;;;;-1:-1:-1;;18343:34:9;;;;;;;;;18333:45;;18343:34;18333:45;;;;18311:68;;;;;;;;;;-1:-1:-1;18311:68:9;;;;18303:128;;;;-1:-1:-1;;;18303:128:9;;30072:2:67;18303:128:9;;;30054:21:67;30111:2;30091:18;;;30084:30;30150:34;30130:18;;;30123:62;-1:-1:-1;;;30201:18:67;;;30194:45;30256:19;;18303:128:9;29870:411:67;18303:128:9;18449:12;;;18442:19;;-1:-1:-1;;;;;;18442:19:9;;;18478:9;;;18471:16;;-1:-1:-1;;18471:16:9;;;18497:17;-1:-1:-1;18504:10:9;;18449:12;18497:17;:::i;:::-;18524:18;18531:11;;;18524:18;;;-1:-1:-1;;;;;18560:15:9;;;;;;;;;;;;-1:-1:-1;;;;;;18560:21:9;;;;;;;;;18592:34;;18560:21;;18524:18;18592:34;;18609:3;;18614:11;;18592:34;;:::i;:::-;;;;;;;;;;;;;18582:45;;;;;;18560:68;;;;;;;;;;;;18553:75;;;;;;;;;15421:3214;;;:::o;22252:297::-;22326:7;22345:11;22367;22392:2;22381:1;:8;:13;:29;;22402:1;:8;22381:29;;;22397:2;22381:29;22367:43;;22425:6;22420:103;22441:3;22437:1;:7;22420:103;;;22506:5;:1;22510;22506:5;:::i;:::-;22480:1;22482:10;22491:1;22482:6;:10;:::i;:::-;22480:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;22480:13:9;22472:40;;22465:47;;;;;22446:3;;;;:::i;:::-;;;;22420:103;;;-1:-1:-1;22539:3:9;;22252:297;-1:-1:-1;;;;22252:297:9:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;14:114:67:-;98:4;91:5;87:16;80:5;77:27;67:55;;118:1;115;108:12;133:243;190:6;243:2;231:9;222:7;218:23;214:32;211:52;;;259:1;256;249:12;211:52;298:9;285:23;317:29;340:5;317:29;:::i;:::-;365:5;133:243;-1:-1:-1;;;133:243:67:o;381:173::-;449:20;;-1:-1:-1;;;;;498:31:67;;488:42;;478:70;;544:1;541;534:12;559:254;627:6;635;688:2;676:9;667:7;663:23;659:32;656:52;;;704:1;701;694:12;656:52;727:29;746:9;727:29;:::i;:::-;717:39;803:2;788:18;;;;775:32;;-1:-1:-1;;;559:254:67:o;1051:186::-;1110:6;1163:2;1151:9;1142:7;1138:23;1134:32;1131:52;;;1179:1;1176;1169:12;1131:52;1202:29;1221:9;1202:29;:::i;1495:260::-;1563:6;1571;1624:2;1612:9;1603:7;1599:23;1595:32;1592:52;;;1640:1;1637;1630:12;1592:52;1663:29;1682:9;1663:29;:::i;:::-;1653:39;;1711:38;1745:2;1734:9;1730:18;1711:38;:::i;:::-;1701:48;;1495:260;;;;;:::o;1760:127::-;1821:10;1816:3;1812:20;1809:1;1802:31;1852:4;1849:1;1842:15;1876:4;1873:1;1866:15;1892:275;1963:2;1957:9;2028:2;2009:13;;-1:-1:-1;;2005:27:67;1993:40;;2063:18;2048:34;;2084:22;;;2045:62;2042:88;;;2110:18;;:::i;:::-;2146:2;2139:22;1892:275;;-1:-1:-1;1892:275:67:o;2172:187::-;2221:4;2254:18;2246:6;2243:30;2240:56;;;2276:18;;:::i;:::-;-1:-1:-1;2342:2:67;2321:15;-1:-1:-1;;2317:29:67;2348:4;2313:40;;2172:187::o;2364:338::-;2429:5;2458:53;2474:36;2503:6;2474:36;:::i;:::-;2458:53;:::i;:::-;2449:62;;2534:6;2527:5;2520:21;2574:3;2565:6;2560:3;2556:16;2553:25;2550:45;;;2591:1;2588;2581:12;2550:45;2640:6;2635:3;2628:4;2621:5;2617:16;2604:43;2694:1;2687:4;2678:6;2671:5;2667:18;2663:29;2656:40;2364:338;;;;;:::o;2707:222::-;2750:5;2803:3;2796:4;2788:6;2784:17;2780:27;2770:55;;2821:1;2818;2811:12;2770:55;2843:80;2919:3;2910:6;2897:20;2890:4;2882:6;2878:17;2843:80;:::i;2934:671::-;3021:6;3029;3082:2;3070:9;3061:7;3057:23;3053:32;3050:52;;;3098:1;3095;3088:12;3050:52;3138:9;3125:23;3167:18;3208:2;3200:6;3197:14;3194:34;;;3224:1;3221;3214:12;3194:34;3247:50;3289:7;3280:6;3269:9;3265:22;3247:50;:::i;:::-;3237:60;;3350:2;3339:9;3335:18;3322:32;3306:48;;3379:2;3369:8;3366:16;3363:36;;;3395:1;3392;3385:12;3363:36;-1:-1:-1;3418:24:67;;3473:4;3465:13;;3461:27;-1:-1:-1;3451:55:67;;3502:1;3499;3492:12;3451:55;3525:74;3591:7;3586:2;3573:16;3568:2;3564;3560:11;3525:74;:::i;:::-;3515:84;;;2934:671;;;;;:::o;3818:180::-;3877:6;3930:2;3918:9;3909:7;3905:23;3901:32;3898:52;;;3946:1;3943;3936:12;3898:52;-1:-1:-1;3969:23:67;;3818:180;-1:-1:-1;3818:180:67:o;4003:258::-;4075:1;4085:113;4099:6;4096:1;4093:13;4085:113;;;4175:11;;;4169:18;4156:11;;;4149:39;4121:2;4114:10;4085:113;;;4216:6;4213:1;4210:13;4207:48;;;4251:1;4242:6;4237:3;4233:16;4226:27;4207:48;;4003:258;;;:::o;4266:257::-;4307:3;4345:5;4339:12;4372:6;4367:3;4360:19;4388:63;4444:6;4437:4;4432:3;4428:14;4421:4;4414:5;4410:16;4388:63;:::i;:::-;4505:2;4484:15;-1:-1:-1;;4480:29:67;4471:39;;;;4512:4;4467:50;;4266:257;-1:-1:-1;;4266:257:67:o;4528:217::-;4675:2;4664:9;4657:21;4638:4;4695:44;4735:2;4724:9;4720:18;4712:6;4695:44;:::i;4969:328::-;5046:6;5054;5062;5115:2;5103:9;5094:7;5090:23;5086:32;5083:52;;;5131:1;5128;5121:12;5083:52;5154:29;5173:9;5154:29;:::i;:::-;5144:39;;5202:38;5236:2;5225:9;5221:18;5202:38;:::i;:::-;5192:48;;5287:2;5276:9;5272:18;5259:32;5249:42;;4969:328;;;;;:::o;5526:316::-;5603:6;5611;5619;5672:2;5660:9;5651:7;5647:23;5643:32;5640:52;;;5688:1;5685;5678:12;5640:52;-1:-1:-1;;5711:23:67;;;5781:2;5766:18;;5753:32;;-1:-1:-1;5832:2:67;5817:18;;;5804:32;;5526:316;-1:-1:-1;5526:316:67:o;6259:118::-;6345:5;6338:13;6331:21;6324:5;6321:32;6311:60;;6367:1;6364;6357:12;6382:458;6465:6;6473;6481;6489;6542:3;6530:9;6521:7;6517:23;6513:33;6510:53;;;6559:1;6556;6549:12;6510:53;6582:29;6601:9;6582:29;:::i;:::-;6572:39;;6630:38;6664:2;6653:9;6649:18;6630:38;:::i;:::-;6620:48;;6715:2;6704:9;6700:18;6687:32;6677:42;;6769:2;6758:9;6754:18;6741:32;6782:28;6804:5;6782:28;:::i;:::-;6382:458;;;;-1:-1:-1;6382:458:67;;-1:-1:-1;;6382:458:67:o;6845:322::-;6914:6;6967:2;6955:9;6946:7;6942:23;6938:32;6935:52;;;6983:1;6980;6973:12;6935:52;7023:9;7010:23;7056:18;7048:6;7045:30;7042:50;;;7088:1;7085;7078:12;7042:50;7111;7153:7;7144:6;7133:9;7129:22;7111:50;:::i;:::-;7101:60;6845:322;-1:-1:-1;;;;6845:322:67:o;7172:248::-;7240:6;7248;7301:2;7289:9;7280:7;7276:23;7272:32;7269:52;;;7317:1;7314;7307:12;7269:52;-1:-1:-1;;7340:23:67;;;7410:2;7395:18;;;7382:32;;-1:-1:-1;7172:248:67:o;7617:515::-;7709:6;7717;7725;7733;7741;7794:3;7782:9;7773:7;7769:23;7765:33;7762:53;;;7811:1;7808;7801:12;7762:53;7847:9;7834:23;7824:33;;7904:2;7893:9;7889:18;7876:32;7866:42;;7955:2;7944:9;7940:18;7927:32;7917:42;;8006:2;7995:9;7991:18;7978:32;7968:42;;8060:3;8049:9;8045:19;8032:33;8074:28;8096:5;8074:28;:::i;:::-;8121:5;8111:15;;;7617:515;;;;;;;;:::o;8591:127::-;8652:10;8647:3;8643:20;8640:1;8633:31;8683:4;8680:1;8673:15;8707:4;8704:1;8697:15;8723:157;8753:1;8787:4;8784:1;8780:12;8811:3;8801:37;;8818:18;;:::i;:::-;8870:3;8863:4;8860:1;8856:12;8852:22;8847:27;;;8723:157;;;;:::o;9042:575::-;9369:2;9358:9;9351:21;9332:4;9395:49;9440:2;9429:9;9425:18;8962:1;8950:14;;-1:-1:-1;;;8989:4:67;8980:14;;8973:30;9028:2;9019:12;;8885:152;9395:49;9492:9;9484:6;9480:22;9475:2;9464:9;9460:18;9453:50;9520:37;9550:6;8962:1;8950:14;;-1:-1:-1;;;8989:4:67;8980:14;;8973:30;9028:2;9019:12;;8885:152;9520:37;9512:45;;;9605:4;9597:6;9593:17;9588:2;9577:9;9573:18;9566:45;9042:575;;;;:::o;9622:127::-;9683:10;9678:3;9674:20;9671:1;9664:31;9714:4;9711:1;9704:15;9738:4;9735:1;9728:15;10339:1421;-1:-1:-1;;;;;10995:15:67;;;10977:34;;10927:3;11042:2;11027:18;;11020:30;;;9831:2;11103:18;;;9819:15;-1:-1:-1;;;9850:14:67;;;9843:38;9897:12;11153:2;11138:18;;11131:50;;;9997:1;9897:12;;;9985:14;-1:-1:-1;;;10015:14:67;;;10008:29;10053:12;11272:2;11257:18;;11250:50;;;10153:2;10053:12;;;10141:15;-1:-1:-1;;;10172:14:67;;;10165:36;11391:15;;;11385:3;11370:19;;11363:44;11444:15;;;;11438:3;11423:19;;11416:44;-1:-1:-1;;;;;11550:15:67;;;-1:-1:-1;11529:19:67;;11522:44;11603:15;-1:-1:-1;11582:19:67;;11575:44;11638:10;11685:15;;;-1:-1:-1;11664:19:67;;11657:44;11738:15;;;;-1:-1:-1;11717:19:67;;11710:44;10217:12;;;10339:1421::o;11765:415::-;-1:-1:-1;;;;;12006:15:67;;;11988:34;;12058:15;;12053:2;12038:18;;12031:43;12110:2;12105;12090:18;;12083:30;;;11931:4;;12130:44;;12155:18;;12147:6;12130:44;:::i;12464:127::-;12525:10;12520:3;12516:20;12513:1;12506:31;12556:4;12553:1;12546:15;12580:4;12577:1;12570:15;12596:168;12636:7;12702:1;12698;12694:6;12690:14;12687:1;12684:21;12679:1;12672:9;12665:17;12661:45;12658:71;;;12709:18;;:::i;:::-;-1:-1:-1;12749:9:67;;12596:168::o;13291:274::-;-1:-1:-1;;;;;13483:32:67;;;;13465:51;;13547:2;13532:18;;13525:34;13453:2;13438:18;;13291:274::o;13570:245::-;13637:6;13690:2;13678:9;13669:7;13665:23;13661:32;13658:52;;;13706:1;13703;13696:12;13658:52;13738:9;13732:16;13757:28;13779:5;13757:28;:::i;14120:135::-;14159:3;14180:17;;;14177:43;;14200:18;;:::i;:::-;-1:-1:-1;14247:1:67;14236:13;;14120:135::o;16658:247::-;16726:6;16779:2;16767:9;16758:7;16754:23;16750:32;16747:52;;;16795:1;16792;16785:12;16747:52;16827:9;16821:16;16846:29;16869:5;16846:29;:::i;17254:422::-;17343:1;17386:5;17343:1;17400:270;17421:7;17411:8;17408:21;17400:270;;;17480:4;17476:1;17472:6;17468:17;17462:4;17459:27;17456:53;;;17489:18;;:::i;:::-;17539:7;17529:8;17525:22;17522:55;;;17559:16;;;;17522:55;17638:22;;;;17598:15;;;;17400:270;;;17404:3;17254:422;;;;;:::o;17681:806::-;17730:5;17760:8;17750:80;;-1:-1:-1;17801:1:67;17815:5;;17750:80;17849:4;17839:76;;-1:-1:-1;17886:1:67;17900:5;;17839:76;17931:4;17949:1;17944:59;;;;18017:1;18012:130;;;;17924:218;;17944:59;17974:1;17965:10;;17988:5;;;18012:130;18049:3;18039:8;18036:17;18033:43;;;18056:18;;:::i;:::-;-1:-1:-1;;18112:1:67;18098:16;;18127:5;;17924:218;;18226:2;18216:8;18213:16;18207:3;18201:4;18198:13;18194:36;18188:2;18178:8;18175:16;18170:2;18164:4;18161:12;18157:35;18154:77;18151:159;;;-1:-1:-1;18263:19:67;;;18295:5;;18151:159;18342:34;18367:8;18361:4;18342:34;:::i;:::-;18412:6;18408:1;18404:6;18400:19;18391:7;18388:32;18385:58;;;18423:18;;:::i;:::-;18461:20;;17681:806;-1:-1:-1;;;17681:806:67:o;18492:140::-;18550:5;18579:47;18620:4;18610:8;18606:19;18600:4;18579:47;:::i;18637:184::-;18707:6;18760:2;18748:9;18739:7;18735:23;18731:32;18728:52;;;18776:1;18773;18766:12;18728:52;-1:-1:-1;18799:16:67;;18637:184;-1:-1:-1;18637:184:67:o;19717:635::-;19796:6;19849:2;19837:9;19828:7;19824:23;19820:32;19817:52;;;19865:1;19862;19855:12;19817:52;19898:9;19892:16;19931:18;19923:6;19920:30;19917:50;;;19963:1;19960;19953:12;19917:50;19986:22;;20039:4;20031:13;;20027:27;-1:-1:-1;20017:55:67;;20068:1;20065;20058:12;20017:55;20097:2;20091:9;20122:49;20138:32;20167:2;20138:32;:::i;20122:49::-;20194:2;20187:5;20180:17;20234:7;20229:2;20224;20220;20216:11;20212:20;20209:33;20206:53;;;20255:1;20252;20245:12;20206:53;20268:54;20319:2;20314;20307:5;20303:14;20298:2;20294;20290:11;20268:54;:::i;20357:466::-;20532:3;20570:6;20564:13;20586:53;20632:6;20627:3;20620:4;20612:6;20608:17;20586:53;:::i;:::-;20702:13;;20661:16;;;;20724:57;20702:13;20661:16;20758:4;20746:17;;20724:57;:::i;:::-;20797:20;;20357:466;-1:-1:-1;;;;20357:466:67:o;21246:125::-;21286:4;21314:1;21311;21308:8;21305:34;;;21319:18;;:::i;:::-;-1:-1:-1;21356:9:67;;21246:125::o;21376:380::-;21455:1;21451:12;;;;21498;;;21519:61;;21573:4;21565:6;21561:17;21551:27;;21519:61;21626:2;21618:6;21615:14;21595:18;21592:38;21589:161;;21672:10;21667:3;21663:20;21660:1;21653:31;21707:4;21704:1;21697:15;21735:4;21732:1;21725:15;22188:112;22220:1;22246;22236:35;;22251:18;;:::i;:::-;-1:-1:-1;22285:9:67;;22188:112::o;22305:128::-;22345:3;22376:1;22372:6;22369:1;22366:13;22363:39;;;22382:18;;:::i;:::-;-1:-1:-1;22418:9:67;;22305:128::o;22853:274::-;22982:3;23020:6;23014:13;23036:53;23082:6;23077:3;23070:4;23062:6;23058:17;23036:53;:::i;:::-;23105:16;;;;;22853:274;-1:-1:-1;;22853:274:67:o;24413:371::-;-1:-1:-1;;;;;;24598:33:67;;24586:46;;24655:13;;24568:3;;24677:61;24655:13;24727:1;24718:11;;24711:4;24699:17;;24677:61;:::i;:::-;24758:16;;;;24776:1;24754:24;;24413:371;-1:-1:-1;;;24413:371:67:o;24789:120::-;24829:1;24855;24845:35;;24860:18;;:::i;:::-;-1:-1:-1;24894:9:67;;24789:120::o;25647:290::-;25824:2;25813:9;25806:21;25787:4;25844:44;25884:2;25873:9;25869:18;25861:6;25844:44;:::i;:::-;25836:52;;25924:6;25919:2;25908:9;25904:18;25897:34;25647:290;;;;;:::o;25942:610::-;26188:13;;26131:3;;26162;;26241:4;26268:15;;;26131:3;26311:175;26325:6;26322:1;26319:13;26311:175;;;26388:13;;26374:28;;26424:14;;;;26461:15;;;;26347:1;26340:9;26311:175;;;-1:-1:-1;;26495:21:67;;;-1:-1:-1;26532:14:67;;;;;-1:-1:-1;;;25942:610:67:o;26746:556::-;26948:2;26930:21;;;26987:3;26967:18;;;26960:31;27027:34;27022:2;27007:18;;27000:62;27098:34;27093:2;27078:18;;27071:62;27170:34;27164:3;27149:19;;27142:63;-1:-1:-1;;;27236:3:67;27221:19;;27214:46;27292:3;27277:19;;26746:556::o;27307:345::-;-1:-1:-1;;;;;27527:32:67;;;;27509:51;;27591:2;27576:18;;27569:34;;;;27634:2;27619:18;;27612:34;27497:2;27482:18;;27307:345::o;27657:709::-;27722:5;27775:3;27768:4;27760:6;27756:17;27752:27;27742:55;;27793:1;27790;27783:12;27742:55;27822:6;27816:13;27848:4;27871:18;27867:2;27864:26;27861:52;;;27893:18;;:::i;:::-;27939:2;27936:1;27932:10;27962:28;27986:2;27982;27978:11;27962:28;:::i;:::-;28024:15;;;28094;;;28090:24;;;28055:12;;;;28126:15;;;28123:35;;;28154:1;28151;28144:12;28123:35;28190:2;28182:6;28178:15;28167:26;;28202:135;28218:6;28213:3;28210:15;28202:135;;;28284:10;;28272:23;;28235:12;;;;28315;;;;28202:135;;;28355:5;27657:709;-1:-1:-1;;;;;;;27657:709:67:o;28371:614::-;28500:6;28508;28561:2;28549:9;28540:7;28536:23;28532:32;28529:52;;;28577:1;28574;28567:12;28529:52;28610:9;28604:16;28639:18;28680:2;28672:6;28669:14;28666:34;;;28696:1;28693;28686:12;28666:34;28719:72;28783:7;28774:6;28763:9;28759:22;28719:72;:::i;:::-;28709:82;;28837:2;28826:9;28822:18;28816:25;28800:41;;28866:2;28856:8;28853:16;28850:36;;;28882:1;28879;28872:12;28850:36;;28905:74;28971:7;28960:8;28949:9;28945:24;28905:74;:::i;28990:442::-;-1:-1:-1;;;;;29237:32:67;;;;29219:51;;-1:-1:-1;;;;;;29306:33:67;;;;29301:2;29286:18;;29279:61;29371:2;29356:18;;29349:34;29414:2;29399:18;;29392:34;29206:3;29191:19;;28990:442::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "MAX()": "d49d5181",
    "acceptableInterval(uint256,uint256)": "a810082f",
    "adminProxy()": "c52f4f34",
    "agEur()": "165b7692",
    "agEurMantissa()": "a46eb0c4",
    "bound(uint256,uint256,uint256)": "5a6c1eed",
    "bytesToSend()": "33437c77",
    "checkPercentage(uint256,uint256,uint256,uint256,bool)": "bbeb1c51",
    "db()": "4d655aff",
    "deal(address,address,uint256)": "6bce989b",
    "deal(address,address,uint256,bool)": "97754ae9",
    "deal(address,uint256)": "c88a5e6d",
    "deployCode(string)": "9a8325a0",
    "deployCode(string,bytes)": "29ce9dde",
    "failed()": "ba414fa6",
    "hoax(address)": "233240ee",
    "hoax(address,address)": "29a9e300",
    "hoax(address,address,uint256)": "af9bbe5f",
    "hoax(address,uint256)": "e9a79a7b",
    "rewind(uint256)": "2d6c17a3",
    "setUp()": "0a9254e4",
    "skip(uint256)": "b9c071b4",
    "startHoax(address)": "6f597075",
    "startHoax(address,address)": "d06d8229",
    "startHoax(address,address,uint256)": "3bf82db1",
    "startHoax(address,uint256)": "108554f2",
    "test18Decimals()": "23e332b9",
    "test6Decimals()": "a44c1ff5",
    "testFailNoDecimalsFunction()": "8ea07bf5",
    "testFailOthersDecimals(uint8)": "03849855",
    "tip(address,address,uint256)": "d82555f1",
    "trez()": "f48d007f",
    "usdc()": "3e413bee",
    "usdcMantissa()": "bb179b06",
    "vaultInterface()": "5ea82934",
    "vaultRaw()": "292ea334",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"}],\"name\":\"acceptableInterval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adminProxy\",\"outputs\":[{\"internalType\":\"contract ProxyAdmin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"agEur\",\"outputs\":[{\"internalType\":\"contract ERC20DecimalsMock\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"agEurMantissa\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"bound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bytesToSend\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"val1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"val2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mantissa\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"negative\",\"type\":\"bool\"}],\"name\":\"checkPercentage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"db\",\"outputs\":[{\"internalType\":\"contract Database\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"adjust\",\"type\":\"bool\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"what\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"what\",\"type\":\"string\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"hoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"}],\"name\":\"hoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"hoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"hoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"rewind\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"startHoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"startHoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"startHoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"}],\"name\":\"startHoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test18Decimals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test6Decimals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFailNoDecimalsFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"testFailOthersDecimals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"tip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trez\",\"outputs\":[{\"internalType\":\"contract Treasury\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"contract ERC20DecimalsMock\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcMantissa\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultInterface\",\"outputs\":[{\"internalType\":\"contract KonkreteVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultRaw\",\"outputs\":[{\"internalType\":\"contract TransparentUpgradeableProxy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/CheckIfCommonMantissaStillTheSame.sol\":\"CheckMantissa\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@rari-capital/=node_modules/@rari-capital/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/Database.sol\":{\"keccak256\":\"0x147e3d97d66d2d4a899d05f6200987fdfc2ddf8c9104037422375fc9c1578d15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d1096b7a76acd3c17176d97187ee8a7d7ed8127e2d7cdb74740d9c9eefad0bb\",\"dweb:/ipfs/QmWdyaCrWib1c3SZapXchk3pFq6AmQmDY7MWfMJqSNS75X\"]},\"contracts/ERC20DecimalsMock.sol\":{\"keccak256\":\"0x1bfd797506906d6d2fd1aa2b45a70d896f0be516da8b145b28a697106a77d041\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://d9221d1af334ccb0b70248da39de1c2717e42f4189c02316a45cba12c870b246\",\"dweb:/ipfs/QmU67CWS2QMR1Kh8hxxxpdBHbu33CU2C8pjcvS9rgQN9ri\"]},\"contracts/KonkreteVault.sol\":{\"keccak256\":\"0x4cc9279e945d9f733d0da3ea4d4fc64b239d9871f3c7e0ab50d2eb1fdfdd0e8e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad71231090680d259ec9bc9651acce41ec562fc1f9dc00d03444f44a411e515c\",\"dweb:/ipfs/QmYiStRC8oz6JZtU2ChW8QyPawFexthyqQwrEggFDXxauz\"]},\"contracts/interface/IDatabase.sol\":{\"keccak256\":\"0x059b88468b1e417cb63e27e4a8243e134070867f74751a00a9d64879cd657ed4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30debed7c1582beef487e0703c71f5aaa3195023e991be090452cbbf2fc7487b\",\"dweb:/ipfs/QmQ1oLoZjG7bfpgcft79mQxcuENEjJngVCALeTFDRQnbgM\"]},\"contracts/interface/IKonkreteVault.sol\":{\"keccak256\":\"0x74cc96dc1736a6c9da9dc90f3d543ccd672da44f51fc145bb56f77ded243adbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dd9810adf1773f8e229723611ef3ce9f5281412c078347c6f6428fb2180b3e0\",\"dweb:/ipfs/QmUB6wF3Jx1rmKJbGmJWJkD9FVSTU43SM8KMXiQpUoemtN\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x24ed91a7f3ba4ee9c82940f0d2d9d71fc4adfb98b3874715cb565e92574f7f11\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://9dc5e2d582d2d55f1b62eb156848eb572b7e8bde6e22dc6d30b84a236967a043\",\"dweb:/ipfs/QmPuggLovwKfXN6B7GkKnCjgAotXKFVkEvei79BEkKnKML\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xb73e3110788ab8d8e0523b85c8d5b7fca33b002323e259d8e25b738c1b3c3f66\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://42e13f55bcaf5fb29e85c43b34241d3830f2387996e84388d23099510e7ca11b\",\"dweb:/ipfs/QmR44x1s39rmtm8anQ7a1qsQG27oGiUh2zzk3MvtVyMxQu\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x3d9683d58ff0f129139e84ba21880ad9c976e24cdd80fb9d24f5f580b86b0dae\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://235ebbf7369b2972abdd3b180b2a817c55ac8b27f86c3b2411bf41052c6e4300\",\"dweb:/ipfs/QmTbS955vj6dMijJWSXM6W2SyWh1hd7Fbszopm3NHZmrW4\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0xc2dfd6ba9449f61b6b03b262182faf302f093a8c05dd10792aeecb4ed1663c0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f79816b0fdc0a6f53173238932ef86e2d7089a6e87b6c5c9c27e6d60f3fe809a\",\"dweb:/ipfs/QmTtXQ8sw91q4n4nXZigNWH3YaGqsJjPXyWCgPGDC6s24j\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xe8f27a3e3e25067334e76799f03d4de6d8f8535c3fc4806468228a9ebd5de51a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://686aaf8725727d94b36c53baad3779e168b31e33eec8d39b41e282382617c626\",\"dweb:/ipfs/QmWVRwPpZyweGCw7uRj1rXQTmcwaXB5Ctz3KvpNJPtxDP8\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd\",\"dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC4626Upgradeable.sol\":{\"keccak256\":\"0x8177581667dcba94ed9eaf94aa2f4fbf5f9b908a40c98bf0de4578a92a5a47fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d9154d4da4b3eab735cc65266b83f33d1da4604a57971eba47c0862f109b228\",\"dweb:/ipfs/QmUN2MkYFA3uJmLDCuXsca7uUx4oLj1kfJA83fdtfsk47L\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2b3005a0064cfc558bdf64b2bae94b565f4574a536aadd61c13838d4f2157790\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://622c3eb87563e71585c9f538d1a196fe2d154dcc5b8f335e8770a8acc95e1f3a\",\"dweb:/ipfs/QmSnDqJJLzv3mirjGB1vrk5X7hegFdS7BKpscpxyqj7sWu\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093\",\"dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol\":{\"keccak256\":\"0xc7ab3e2a24a5013a9ff2544ba279817cfe72d30e342dc1a1f826cd84a7bdb567\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae15d93ab3b2ed1acf825ee3f94bead940d5e39dc73b17c33e245ab1091264\",\"dweb:/ipfs/QmQJGggtCrEC8XDsqvuDDN2FceWCF2du846knCEFTjQNmn\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x220c4a5af915e656be2aaa85ca57505d102418e476b1e2ef6c62e0c6ac143871\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ed2c33173f7e7000889abed7c339b7a0e3b7867cdea546caaf6bc917ef1039c\",\"dweb:/ipfs/QmQ4Ye5h7jm6V4CdhT3r6hvf25DtiV74ErppQVE4SpRKj6\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x4807db844a856813048b5af81a764fdd25a0ae8876a3132593e8d21ddc6b607c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ca2fce75b1b20047a41f6f67d2d1be3d24308bf34668a22c2f971689e319a70\",\"dweb:/ipfs/QmQ8hxhdkDmwK9CBURbV2eaEeFTBYb3bB3ByWw1GmjvEWo\"]},\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89c2a0f70157c13845be5cb49b078a6374fee3a78fa950052a3af26190255da8\",\"dweb:/ipfs/QmUcvMEQH1oMM2pUyMuDiBUKdvvnTz1NRB8bmPHrVq8725\"]},\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x33b8603bfbef7f33d9308b79c79aa3db7eb19525fd1addd764285e834ca275d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ada1f59ac012751561c8fa066bddf1a8fb518fcb0ea2d64920797c1711aad0c\",\"dweb:/ipfs/QmTrY13qevgKDUAyQhFvMNLvbLuWaQprvDzvLdXWQwnoxA\"]},\"node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0xa6a787e7a901af6511e19aa53e1a00352db215a011d2c7a438d0582dd5da76f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6c4477d480bac20d681ade0e712b77ad828acf530a1d5c0abc5fb78068a05a1\",\"dweb:/ipfs/QmdBqsK8CcUceTeWzhHwFDEvKMoHimwtV96Lbim7ZBtCb8\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"test/foundry/CheckIfCommonMantissaStillTheSame.sol\":{\"keccak256\":\"0x91c8a65de51c046ea020fc7bf83369a0afd2ced99256c22a260926a9c5367531\",\"urls\":[\"bzz-raw://30c93e4977ab2d854c8f3e740d383b98dca79cbde45a24a9af50e2991f7450da\",\"dweb:/ipfs/QmVQMLLwQvPyptcTyYpjUkUS2SSvFgC4jn3sG16vSPg8QK\"]},\"test/foundry/Contract.t.sol\":{\"keccak256\":\"0x9f6947f05d413df5287821437856c5c48f865c1097fbd57417b9f48a4b65e626\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0a9a0c334447e2c51753e89d407a866cf0276c18b0ba7a24d471ff7e1d1f34de\",\"dweb:/ipfs/QmebLGz7Xr6PdXRR4zGxu2AAnqxtvrF4iMmL9exPJgpbTS\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.14+commit.80d49f37"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "target",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "acceptableInterval",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "adminProxy",
          "outputs": [
            {
              "internalType": "contract ProxyAdmin",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "agEur",
          "outputs": [
            {
              "internalType": "contract ERC20DecimalsMock",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "agEurMantissa",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "min",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "max",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bound",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "result",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bytesToSend",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "val1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "val2",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "mantissa",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expected",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "negative",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkPercentage",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "db",
          "outputs": [
            {
              "internalType": "contract Database",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deal"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "adjust",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deal"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deal"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "what",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "args",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployCode",
          "outputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "what",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployCode",
          "outputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "hoax"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "origin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "hoax"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "origin",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "hoax"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "hoax"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rewind"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "skip"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startHoax"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "origin",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startHoax"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startHoax"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "origin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startHoax"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test18Decimals"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test6Decimals"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFailNoDecimalsFunction"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "decimals",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFailOthersDecimals"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "tip"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "trez",
          "outputs": [
            {
              "internalType": "contract Treasury",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "usdc",
          "outputs": [
            {
              "internalType": "contract ERC20DecimalsMock",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "usdcMantissa",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultInterface",
          "outputs": [
            {
              "internalType": "contract KonkreteVault",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultRaw",
          "outputs": [
            {
              "internalType": "contract TransparentUpgradeableProxy",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@rari-capital/=node_modules/@rari-capital/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/CheckIfCommonMantissaStillTheSame.sol": "CheckMantissa"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Database.sol": {
        "keccak256": "0x147e3d97d66d2d4a899d05f6200987fdfc2ddf8c9104037422375fc9c1578d15",
        "urls": [
          "bzz-raw://7d1096b7a76acd3c17176d97187ee8a7d7ed8127e2d7cdb74740d9c9eefad0bb",
          "dweb:/ipfs/QmWdyaCrWib1c3SZapXchk3pFq6AmQmDY7MWfMJqSNS75X"
        ],
        "license": "MIT"
      },
      "contracts/ERC20DecimalsMock.sol": {
        "keccak256": "0x1bfd797506906d6d2fd1aa2b45a70d896f0be516da8b145b28a697106a77d041",
        "urls": [
          "bzz-raw://d9221d1af334ccb0b70248da39de1c2717e42f4189c02316a45cba12c870b246",
          "dweb:/ipfs/QmU67CWS2QMR1Kh8hxxxpdBHbu33CU2C8pjcvS9rgQN9ri"
        ],
        "license": "Unlicense"
      },
      "contracts/KonkreteVault.sol": {
        "keccak256": "0x4cc9279e945d9f733d0da3ea4d4fc64b239d9871f3c7e0ab50d2eb1fdfdd0e8e",
        "urls": [
          "bzz-raw://ad71231090680d259ec9bc9651acce41ec562fc1f9dc00d03444f44a411e515c",
          "dweb:/ipfs/QmYiStRC8oz6JZtU2ChW8QyPawFexthyqQwrEggFDXxauz"
        ],
        "license": "MIT"
      },
      "contracts/interface/IDatabase.sol": {
        "keccak256": "0x059b88468b1e417cb63e27e4a8243e134070867f74751a00a9d64879cd657ed4",
        "urls": [
          "bzz-raw://30debed7c1582beef487e0703c71f5aaa3195023e991be090452cbbf2fc7487b",
          "dweb:/ipfs/QmQ1oLoZjG7bfpgcft79mQxcuENEjJngVCALeTFDRQnbgM"
        ],
        "license": "MIT"
      },
      "contracts/interface/IKonkreteVault.sol": {
        "keccak256": "0x74cc96dc1736a6c9da9dc90f3d543ccd672da44f51fc145bb56f77ded243adbf",
        "urls": [
          "bzz-raw://2dd9810adf1773f8e229723611ef3ce9f5281412c078347c6f6428fb2180b3e0",
          "dweb:/ipfs/QmUB6wF3Jx1rmKJbGmJWJkD9FVSTU43SM8KMXiQpUoemtN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x24ed91a7f3ba4ee9c82940f0d2d9d71fc4adfb98b3874715cb565e92574f7f11",
        "urls": [
          "bzz-raw://9dc5e2d582d2d55f1b62eb156848eb572b7e8bde6e22dc6d30b84a236967a043",
          "dweb:/ipfs/QmPuggLovwKfXN6B7GkKnCjgAotXKFVkEvei79BEkKnKML"
        ],
        "license": "Unlicense"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xb73e3110788ab8d8e0523b85c8d5b7fca33b002323e259d8e25b738c1b3c3f66",
        "urls": [
          "bzz-raw://42e13f55bcaf5fb29e85c43b34241d3830f2387996e84388d23099510e7ca11b",
          "dweb:/ipfs/QmR44x1s39rmtm8anQ7a1qsQG27oGiUh2zzk3MvtVyMxQu"
        ],
        "license": "Unlicense"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x3d9683d58ff0f129139e84ba21880ad9c976e24cdd80fb9d24f5f580b86b0dae",
        "urls": [
          "bzz-raw://235ebbf7369b2972abdd3b180b2a817c55ac8b27f86c3b2411bf41052c6e4300",
          "dweb:/ipfs/QmTbS955vj6dMijJWSXM6W2SyWh1hd7Fbszopm3NHZmrW4"
        ],
        "license": "Unlicense"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol": {
        "keccak256": "0xc2dfd6ba9449f61b6b03b262182faf302f093a8c05dd10792aeecb4ed1663c0c",
        "urls": [
          "bzz-raw://f79816b0fdc0a6f53173238932ef86e2d7089a6e87b6c5c9c27e6d60f3fe809a",
          "dweb:/ipfs/QmTtXQ8sw91q4n4nXZigNWH3YaGqsJjPXyWCgPGDC6s24j"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
        "keccak256": "0xe8f27a3e3e25067334e76799f03d4de6d8f8535c3fc4806468228a9ebd5de51a",
        "urls": [
          "bzz-raw://686aaf8725727d94b36c53baad3779e168b31e33eec8d39b41e282382617c626",
          "dweb:/ipfs/QmWVRwPpZyweGCw7uRj1rXQTmcwaXB5Ctz3KvpNJPtxDP8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol": {
        "keccak256": "0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572",
        "urls": [
          "bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd",
          "dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
        "keccak256": "0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa",
        "urls": [
          "bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c",
          "dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC4626Upgradeable.sol": {
        "keccak256": "0x8177581667dcba94ed9eaf94aa2f4fbf5f9b908a40c98bf0de4578a92a5a47fe",
        "urls": [
          "bzz-raw://2d9154d4da4b3eab735cc65266b83f33d1da4604a57971eba47c0862f109b228",
          "dweb:/ipfs/QmUN2MkYFA3uJmLDCuXsca7uUx4oLj1kfJA83fdtfsk47L"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271",
        "urls": [
          "bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618",
          "dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
        "keccak256": "0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250",
        "urls": [
          "bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad",
          "dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x2b3005a0064cfc558bdf64b2bae94b565f4574a536aadd61c13838d4f2157790",
        "urls": [
          "bzz-raw://622c3eb87563e71585c9f538d1a196fe2d154dcc5b8f335e8770a8acc95e1f3a",
          "dweb:/ipfs/QmSnDqJJLzv3mirjGB1vrk5X7hegFdS7BKpscpxyqj7sWu"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42",
        "urls": [
          "bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093",
          "dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol": {
        "keccak256": "0xc7ab3e2a24a5013a9ff2544ba279817cfe72d30e342dc1a1f826cd84a7bdb567",
        "urls": [
          "bzz-raw://08ae15d93ab3b2ed1acf825ee3f94bead940d5e39dc73b17c33e245ab1091264",
          "dweb:/ipfs/QmQJGggtCrEC8XDsqvuDDN2FceWCF2du846knCEFTjQNmn"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol": {
        "keccak256": "0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024",
        "urls": [
          "bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d",
          "dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
        "keccak256": "0x220c4a5af915e656be2aaa85ca57505d102418e476b1e2ef6c62e0c6ac143871",
        "urls": [
          "bzz-raw://6ed2c33173f7e7000889abed7c339b7a0e3b7867cdea546caaf6bc917ef1039c",
          "dweb:/ipfs/QmQ4Ye5h7jm6V4CdhT3r6hvf25DtiV74ErppQVE4SpRKj6"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
        "keccak256": "0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da",
        "urls": [
          "bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8",
          "dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
        "keccak256": "0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a",
        "urls": [
          "bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4",
          "dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol": {
        "keccak256": "0x4807db844a856813048b5af81a764fdd25a0ae8876a3132593e8d21ddc6b607c",
        "urls": [
          "bzz-raw://3ca2fce75b1b20047a41f6f67d2d1be3d24308bf34668a22c2f971689e319a70",
          "dweb:/ipfs/QmQ8hxhdkDmwK9CBURbV2eaEeFTBYb3bB3ByWw1GmjvEWo"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
        "keccak256": "0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a",
        "urls": [
          "bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe",
          "dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "keccak256": "0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d",
        "urls": [
          "bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5",
          "dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a",
        "urls": [
          "bzz-raw://89c2a0f70157c13845be5cb49b078a6374fee3a78fa950052a3af26190255da8",
          "dweb:/ipfs/QmUcvMEQH1oMM2pUyMuDiBUKdvvnTz1NRB8bmPHrVq8725"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol": {
        "keccak256": "0x33b8603bfbef7f33d9308b79c79aa3db7eb19525fd1addd764285e834ca275d7",
        "urls": [
          "bzz-raw://0ada1f59ac012751561c8fa066bddf1a8fb518fcb0ea2d64920797c1711aad0c",
          "dweb:/ipfs/QmTrY13qevgKDUAyQhFvMNLvbLuWaQprvDzvLdXWQwnoxA"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
        "keccak256": "0xa6a787e7a901af6511e19aa53e1a00352db215a011d2c7a438d0582dd5da76f9",
        "urls": [
          "bzz-raw://a6c4477d480bac20d681ade0e712b77ad828acf530a1d5c0abc5fb78068a05a1",
          "dweb:/ipfs/QmdBqsK8CcUceTeWzhHwFDEvKMoHimwtV96Lbim7ZBtCb8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d",
        "urls": [
          "bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4",
          "dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba",
        "urls": [
          "bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb",
          "dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "test/foundry/CheckIfCommonMantissaStillTheSame.sol": {
        "keccak256": "0x91c8a65de51c046ea020fc7bf83369a0afd2ced99256c22a260926a9c5367531",
        "urls": [
          "bzz-raw://30c93e4977ab2d854c8f3e740d383b98dca79cbde45a24a9af50e2991f7450da",
          "dweb:/ipfs/QmVQMLLwQvPyptcTyYpjUkUS2SSvFgC4jn3sG16vSPg8QK"
        ],
        "license": null
      },
      "test/foundry/Contract.t.sol": {
        "keccak256": "0x9f6947f05d413df5287821437856c5c48f865c1097fbd57417b9f48a4b65e626",
        "urls": [
          "bzz-raw://0a9a0c334447e2c51753e89d407a866cf0276c18b0ba7a24d471ff7e1d1f34de",
          "dweb:/ipfs/QmebLGz7Xr6PdXRR4zGxu2AAnqxtvrF4iMmL9exPJgpbTS"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/CheckIfCommonMantissaStillTheSame.sol",
    "id": 34867,
    "exportedSymbols": {
      "AccessControl": [
        30737
      ],
      "AccessControlEnumerableUpgradeable": [
        25677
      ],
      "AccessControlUpgradeable": [
        26013
      ],
      "Address": [
        32971
      ],
      "AddressUpgradeable": [
        28670
      ],
      "BANK": [
        34898
      ],
      "CheckMantissa": [
        34866
      ],
      "Context": [
        32993
      ],
      "ContextUpgradeable": [
        28712
      ],
      "ContractTest": [
        35438
      ],
      "DEV": [
        34884
      ],
      "DSTest": [
        6428
      ],
      "Database": [
        569
      ],
      "ECDSA": [
        33589
      ],
      "ERC165": [
        33613
      ],
      "ERC165Upgradeable": [
        28931
      ],
      "ERC1967Proxy": [
        30970
      ],
      "ERC1967Upgrade": [
        31288
      ],
      "ERC20": [
        32221
      ],
      "ERC20DecimalsMock": [
        630
      ],
      "ERC20Upgradeable": [
        27260
      ],
      "ERC4626Upgradeable": [
        28044
      ],
      "EnumerableSetUpgradeable": [
        30421
      ],
      "IAccessControl": [
        30810
      ],
      "IAccessControlEnumerableUpgradeable": [
        26038
      ],
      "IAccessControlUpgradeable": [
        26111
      ],
      "IBeacon": [
        31350
      ],
      "IDatabase": [
        3952
      ],
      "IERC165": [
        33625
      ],
      "IERC165Upgradeable": [
        28943
      ],
      "IERC1822Proxiable": [
        30933
      ],
      "IERC20": [
        32299
      ],
      "IERC20Metadata": [
        32324
      ],
      "IERC20MetadataUpgradeable": [
        28069
      ],
      "IERC20Permit": [
        32360
      ],
      "IERC20PermitUpgradeable": [
        28105
      ],
      "IERC20Upgradeable": [
        27338
      ],
      "IERC4626Upgradeable": [
        26279
      ],
      "IKonkreteVault": [
        4307
      ],
      "Initializable": [
        26448
      ],
      "KonkreteVault": [
        2267
      ],
      "MSIG": [
        34895
      ],
      "Math": [
        34490
      ],
      "MathUpgradeable": [
        29808
      ],
      "Ownable": [
        30923
      ],
      "PERCENTX100": [
        34879
      ],
      "PausableUpgradeable": [
        26575
      ],
      "Proxy": [
        31340
      ],
      "ProxyAdmin": [
        31486
      ],
      "ReentrancyGuardUpgradeable": [
        26648
      ],
      "SIG": [
        34901
      ],
      "SIGNER": [
        34889
      ],
      "SIGNER_PKEY": [
        34892
      ],
      "SafeERC20": [
        32641
      ],
      "SafeERC20Upgradeable": [
        28386
      ],
      "SaleStep": [
        3963
      ],
      "Script": [
        6457
      ],
      "StdStorage": [
        7783
      ],
      "StepVar": [
        3978
      ],
      "StorageSlot": [
        33053
      ],
      "Strings": [
        33228
      ],
      "StringsUpgradeable": [
        28887
      ],
      "Test": [
        7685
      ],
      "TransparentUpgradeableProxy": [
        31634
      ],
      "Treasury": [
        34912
      ],
      "Vm": [
        9404
      ],
      "console": [
        17468
      ],
      "console2": [
        25532
      ],
      "stdError": [
        7755
      ],
      "stdMath": [
        9020
      ],
      "stdStorage": [
        8873
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:3073:57",
    "nodes": [
      {
        "id": 34492,
        "nodeType": "PragmaDirective",
        "src": "0:24:57",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 34493,
        "nodeType": "ImportDirective",
        "src": "26:26:57",
        "nodes": [],
        "absolutePath": "test/foundry/Contract.t.sol",
        "file": "./Contract.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34867,
        "sourceUnit": 35439,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34494,
        "nodeType": "ImportDirective",
        "src": "53:51:57",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34867,
        "sourceUnit": 33229,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34866,
        "nodeType": "ContractDefinition",
        "src": "106:2966:57",
        "nodes": [
          {
            "id": 34603,
            "nodeType": "FunctionDefinition",
            "src": "149:873:57",
            "nodes": [],
            "body": {
              "id": 34602,
              "nodeType": "Block",
              "src": "182:840:57",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34501
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34501,
                      "mutability": "mutable",
                      "name": "stable18",
                      "nameLocation": "206:8:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 34602,
                      "src": "188:26:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20DecimalsMock_$630",
                        "typeString": "contract ERC20DecimalsMock"
                      },
                      "typeName": {
                        "id": 34500,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34499,
                          "name": "ERC20DecimalsMock",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 630,
                          "src": "188:17:57"
                        },
                        "referencedDeclaration": 630,
                        "src": "188:17:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20DecimalsMock_$630",
                          "typeString": "contract ERC20DecimalsMock"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34509,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "6d6f636b",
                        "id": 34505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "239:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa88ac588f5b956d02c6098e901a7351ac7e50b41ac55814346d8c5f9ade6811",
                          "typeString": "literal_string \"mock\""
                        },
                        "value": "mock"
                      },
                      {
                        "hexValue": "6d6f636b",
                        "id": 34506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "247:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa88ac588f5b956d02c6098e901a7351ac7e50b41ac55814346d8c5f9ade6811",
                          "typeString": "literal_string \"mock\""
                        },
                        "value": "mock"
                      },
                      {
                        "hexValue": "3138",
                        "id": 34507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "255:2:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_fa88ac588f5b956d02c6098e901a7351ac7e50b41ac55814346d8c5f9ade6811",
                          "typeString": "literal_string \"mock\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa88ac588f5b956d02c6098e901a7351ac7e50b41ac55814346d8c5f9ade6811",
                          "typeString": "literal_string \"mock\""
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "id": 34504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "217:21:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_ERC20DecimalsMock_$630_$",
                        "typeString": "function (string memory,string memory,uint8) returns (contract ERC20DecimalsMock)"
                      },
                      "typeName": {
                        "id": 34503,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34502,
                          "name": "ERC20DecimalsMock",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 630,
                          "src": "221:17:57"
                        },
                        "referencedDeclaration": 630,
                        "src": "221:17:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20DecimalsMock_$630",
                          "typeString": "contract ERC20DecimalsMock"
                        }
                      }
                    },
                    "id": 34508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "217:41:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20DecimalsMock_$630",
                      "typeString": "contract ERC20DecimalsMock"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "188:70:57"
                },
                {
                  "assignments": [
                    34511
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34511,
                      "mutability": "mutable",
                      "name": "initializing18",
                      "nameLocation": "278:14:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 34602,
                      "src": "265:27:57",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 34510,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "265:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34555,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 34514,
                            "name": "IKonkreteVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4307,
                            "src": "325:14:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IKonkreteVault_$4307_$",
                              "typeString": "type(contract IKonkreteVault)"
                            }
                          },
                          "id": 34515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "initialize",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4195,
                          "src": "325:25:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_uint128_$_t_uint128_$_t_uint32_$_t_uint32_$returns$__$",
                            "typeString": "function IKonkreteVault.initialize(address,string memory,string memory,string memory,address,address,address,uint128,uint128,uint32,uint32)"
                          }
                        },
                        "id": 34516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "325:34:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34519,
                            "name": "stable18",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34501,
                            "src": "375:8:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20DecimalsMock_$630",
                              "typeString": "contract ERC20DecimalsMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20DecimalsMock_$630",
                              "typeString": "contract ERC20DecimalsMock"
                            }
                          ],
                          "id": 34518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "367:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34517,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "367:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "367:17:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4b6e6b72657465546f6b656e",
                        "id": 34521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "392:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13dd5a3a50bad2722691d41aca95cedf21d0172cc981c718b7ee575cf764da2c",
                          "typeString": "literal_string \"KnkreteToken\""
                        },
                        "value": "KnkreteToken"
                      },
                      {
                        "hexValue": "4b6f6e",
                        "id": 34522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "414:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d00e6edda698944d9368550c319f0dfb2a29785cdfe8b011b583856d773b724",
                          "typeString": "literal_string \"Kon\""
                        },
                        "value": "Kon"
                      },
                      {
                        "hexValue": "697066733a2f2f555249",
                        "id": 34523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "427:12:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5c1e5a8ed1d0d9a7cd105173f4c4b7820af63ca92c507de52a57b212fe30933",
                          "typeString": "literal_string \"ipfs://URI\""
                        },
                        "value": "ipfs://URI"
                      },
                      {
                        "baseExpression": {
                          "id": 34524,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35082,
                          "src": "447:4:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$6_storage",
                            "typeString": "address[6] storage ref"
                          }
                        },
                        "id": 34526,
                        "indexExpression": {
                          "id": 34525,
                          "name": "MSIG",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34895,
                          "src": "452:4:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "447:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 34527,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35082,
                          "src": "465:4:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$6_storage",
                            "typeString": "address[6] storage ref"
                          }
                        },
                        "id": 34529,
                        "indexExpression": {
                          "id": 34528,
                          "name": "BANK",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34898,
                          "src": "470:4:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "465:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34532,
                            "name": "db",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35101,
                            "src": "491:2:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Database_$569",
                              "typeString": "contract Database"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Database_$569",
                              "typeString": "contract Database"
                            }
                          ],
                          "id": 34531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "483:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34530,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "483:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "483:11:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_50000000000_by_1",
                              "typeString": "int_const 50000000000"
                            },
                            "id": 34538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "35305f303030",
                              "id": 34536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "510:6:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50000_by_1",
                                "typeString": "int_const 50000"
                              },
                              "value": "50_000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "316536",
                              "id": 34537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "519:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "value": "1e6"
                            },
                            "src": "510:12:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50000000000_by_1",
                              "typeString": "int_const 50000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_50000000000_by_1",
                              "typeString": "int_const 50000000000"
                            }
                          ],
                          "id": 34535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "502:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint128_$",
                            "typeString": "type(uint128)"
                          },
                          "typeName": {
                            "id": 34534,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "502:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "502:21:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_50000000000_by_1",
                              "typeString": "int_const 50000000000"
                            },
                            "id": 34544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "35305f303030",
                              "id": 34542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "539:6:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50000_by_1",
                                "typeString": "int_const 50000"
                              },
                              "value": "50_000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "316536",
                              "id": 34543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "548:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "value": "1e6"
                            },
                            "src": "539:12:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50000000000_by_1",
                              "typeString": "int_const 50000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_50000000000_by_1",
                              "typeString": "int_const 50000000000"
                            }
                          ],
                          "id": 34541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "531:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint128_$",
                            "typeString": "type(uint128)"
                          },
                          "typeName": {
                            "id": 34540,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "531:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "531:21:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34548,
                            "name": "StartDate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35021,
                            "src": "567:9:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 34547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "560:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 34546,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "560:6:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "560:17:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34552,
                            "name": "StopDate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35026,
                            "src": "592:8:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 34551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "585:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 34550,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "585:6:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "585:16:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_13dd5a3a50bad2722691d41aca95cedf21d0172cc981c718b7ee575cf764da2c",
                          "typeString": "literal_string \"KnkreteToken\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d00e6edda698944d9368550c319f0dfb2a29785cdfe8b011b583856d773b724",
                          "typeString": "literal_string \"Kon\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5c1e5a8ed1d0d9a7cd105173f4c4b7820af63ca92c507de52a57b212fe30933",
                          "typeString": "literal_string \"ipfs://URI\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 34512,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "295:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 34513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "295:22:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 34554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "295:312:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "265:342:57"
                },
                {
                  "assignments": [
                    34558
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34558,
                      "mutability": "mutable",
                      "name": "vault18",
                      "nameLocation": "628:7:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 34602,
                      "src": "613:22:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IKonkreteVault_$4307",
                        "typeString": "contract IKonkreteVault"
                      },
                      "typeName": {
                        "id": 34557,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34556,
                          "name": "IKonkreteVault",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4307,
                          "src": "613:14:57"
                        },
                        "referencedDeclaration": 4307,
                        "src": "613:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IKonkreteVault_$4307",
                          "typeString": "contract IKonkreteVault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34577,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 34567,
                                    "name": "vaultInterface",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 35160,
                                    "src": "728:14:57",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_KonkreteVault_$2267",
                                      "typeString": "contract KonkreteVault"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_KonkreteVault_$2267",
                                      "typeString": "contract KonkreteVault"
                                    }
                                  ],
                                  "id": 34566,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "720:7:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 34565,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "720:7:57",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 34568,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "720:23:57",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 34571,
                                    "name": "adminProxy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 35147,
                                    "src": "763:10:57",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ProxyAdmin_$31486",
                                      "typeString": "contract ProxyAdmin"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ProxyAdmin_$31486",
                                      "typeString": "contract ProxyAdmin"
                                    }
                                  ],
                                  "id": 34570,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "755:7:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 34569,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "755:7:57",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 34572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "755:19:57",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 34573,
                                "name": "initializing18",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34511,
                                "src": "786:14:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 34564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "677:31:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_payable$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_TransparentUpgradeableProxy_$31634_$",
                                "typeString": "function (address,address,bytes memory) payable returns (contract TransparentUpgradeableProxy)"
                              },
                              "typeName": {
                                "id": 34563,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 34562,
                                  "name": "TransparentUpgradeableProxy",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 31634,
                                  "src": "681:27:57"
                                },
                                "referencedDeclaration": 31634,
                                "src": "681:27:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$31634",
                                  "typeString": "contract TransparentUpgradeableProxy"
                                }
                              }
                            },
                            "id": 34574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "677:133:57",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$31634",
                              "typeString": "contract TransparentUpgradeableProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$31634",
                              "typeString": "contract TransparentUpgradeableProxy"
                            }
                          ],
                          "id": 34561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "660:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34560,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "660:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "660:158:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34559,
                      "name": "IKonkreteVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4307,
                      "src": "638:14:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IKonkreteVault_$4307_$",
                        "typeString": "type(contract IKonkreteVault)"
                      }
                    },
                    "id": 34576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "638:186:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IKonkreteVault_$4307",
                      "typeString": "contract IKonkreteVault"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "613:211:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 34585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 34579,
                              "name": "vault18",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34558,
                              "src": "838:7:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IKonkreteVault_$4307",
                                "typeString": "contract IKonkreteVault"
                              }
                            },
                            "id": 34580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "decimals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4150,
                            "src": "838:16:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                              "typeString": "function () view external returns (uint8)"
                            }
                          },
                          "id": 34581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "838:18:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 34582,
                              "name": "stable18",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34501,
                              "src": "860:8:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20DecimalsMock_$630",
                                "typeString": "contract ERC20DecimalsMock"
                              }
                            },
                            "id": 34583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "decimals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 603,
                            "src": "860:17:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                              "typeString": "function () view external returns (uint8)"
                            }
                          },
                          "id": 34584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "860:19:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "838:41:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446563696d616c7320646966666572",
                        "id": 34586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "881:17:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_923110c0089da3a604aeca147c7d031be345a0800bee5d0159e6fcc9c48a5fc1",
                          "typeString": "literal_string \"Decimals differ\""
                        },
                        "value": "Decimals differ"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_923110c0089da3a604aeca147c7d031be345a0800bee5d0159e6fcc9c48a5fc1",
                          "typeString": "literal_string \"Decimals differ\""
                        }
                      ],
                      "id": 34578,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "830:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 34587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "830:69:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34588,
                  "nodeType": "ExpressionStatement",
                  "src": "830:69:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 34598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 34590,
                              "name": "vault18",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34558,
                              "src": "920:7:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IKonkreteVault_$4307",
                                "typeString": "contract IKonkreteVault"
                              }
                            },
                            "id": 34591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "originalPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4217,
                            "src": "920:21:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 34592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "920:23:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 34597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 34593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "947:2:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 34594,
                                "name": "stable18",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34501,
                                "src": "953:8:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20DecimalsMock_$630",
                                  "typeString": "contract ERC20DecimalsMock"
                                }
                              },
                              "id": 34595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "decimals",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 603,
                              "src": "953:17:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                "typeString": "function () view external returns (uint8)"
                              }
                            },
                            "id": 34596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "953:19:57",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "947:25:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "920:52:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e67206d616e74697373612f6f726967696e616c207072696365",
                        "id": 34599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "980:31:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a0e377f7650ea99d657a07432611d361d88010e0c1bf231abbc15620739349f7",
                          "typeString": "literal_string \"Wrong mantissa/original price\""
                        },
                        "value": "Wrong mantissa/original price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a0e377f7650ea99d657a07432611d361d88010e0c1bf231abbc15620739349f7",
                          "typeString": "literal_string \"Wrong mantissa/original price\""
                        }
                      ],
                      "id": 34589,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "905:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 34600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "905:112:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34601,
                  "nodeType": "ExpressionStatement",
                  "src": "905:112:57"
                }
              ]
            },
            "functionSelector": "23e332b9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test18Decimals",
            "nameLocation": "158:14:57",
            "parameters": {
              "id": 34497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "172:2:57"
            },
            "returnParameters": {
              "id": 34498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "182:0:57"
            },
            "scope": 34866,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34710,
            "nodeType": "FunctionDefinition",
            "src": "1026:863:57",
            "nodes": [],
            "body": {
              "id": 34709,
              "nodeType": "Block",
              "src": "1058:831:57",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34608
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34608,
                      "mutability": "mutable",
                      "name": "stable6",
                      "nameLocation": "1082:7:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 34709,
                      "src": "1064:25:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20DecimalsMock_$630",
                        "typeString": "contract ERC20DecimalsMock"
                      },
                      "typeName": {
                        "id": 34607,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34606,
                          "name": "ERC20DecimalsMock",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 630,
                          "src": "1064:17:57"
                        },
                        "referencedDeclaration": 630,
                        "src": "1064:17:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20DecimalsMock_$630",
                          "typeString": "contract ERC20DecimalsMock"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34616,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "6d6f636b",
                        "id": 34612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1114:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa88ac588f5b956d02c6098e901a7351ac7e50b41ac55814346d8c5f9ade6811",
                          "typeString": "literal_string \"mock\""
                        },
                        "value": "mock"
                      },
                      {
                        "hexValue": "6d6f636b",
                        "id": 34613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1122:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa88ac588f5b956d02c6098e901a7351ac7e50b41ac55814346d8c5f9ade6811",
                          "typeString": "literal_string \"mock\""
                        },
                        "value": "mock"
                      },
                      {
                        "hexValue": "36",
                        "id": 34614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1130:1:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_fa88ac588f5b956d02c6098e901a7351ac7e50b41ac55814346d8c5f9ade6811",
                          "typeString": "literal_string \"mock\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa88ac588f5b956d02c6098e901a7351ac7e50b41ac55814346d8c5f9ade6811",
                          "typeString": "literal_string \"mock\""
                        },
                        {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        }
                      ],
                      "id": 34611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1092:21:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_ERC20DecimalsMock_$630_$",
                        "typeString": "function (string memory,string memory,uint8) returns (contract ERC20DecimalsMock)"
                      },
                      "typeName": {
                        "id": 34610,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34609,
                          "name": "ERC20DecimalsMock",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 630,
                          "src": "1096:17:57"
                        },
                        "referencedDeclaration": 630,
                        "src": "1096:17:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20DecimalsMock_$630",
                          "typeString": "contract ERC20DecimalsMock"
                        }
                      }
                    },
                    "id": 34615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1092:40:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20DecimalsMock_$630",
                      "typeString": "contract ERC20DecimalsMock"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1064:68:57"
                },
                {
                  "assignments": [
                    34618
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34618,
                      "mutability": "mutable",
                      "name": "initializing6",
                      "nameLocation": "1152:13:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 34709,
                      "src": "1139:26:57",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 34617,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1139:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34662,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 34621,
                            "name": "IKonkreteVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4307,
                            "src": "1198:14:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IKonkreteVault_$4307_$",
                              "typeString": "type(contract IKonkreteVault)"
                            }
                          },
                          "id": 34622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "initialize",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4195,
                          "src": "1198:25:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_uint128_$_t_uint128_$_t_uint32_$_t_uint32_$returns$__$",
                            "typeString": "function IKonkreteVault.initialize(address,string memory,string memory,string memory,address,address,address,uint128,uint128,uint32,uint32)"
                          }
                        },
                        "id": 34623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "1198:34:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34626,
                            "name": "stable6",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34608,
                            "src": "1248:7:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20DecimalsMock_$630",
                              "typeString": "contract ERC20DecimalsMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20DecimalsMock_$630",
                              "typeString": "contract ERC20DecimalsMock"
                            }
                          ],
                          "id": 34625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1240:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34624,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1240:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1240:16:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4b6e6b72657465546f6b656e",
                        "id": 34628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1264:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13dd5a3a50bad2722691d41aca95cedf21d0172cc981c718b7ee575cf764da2c",
                          "typeString": "literal_string \"KnkreteToken\""
                        },
                        "value": "KnkreteToken"
                      },
                      {
                        "hexValue": "4b6f6e",
                        "id": 34629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1286:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d00e6edda698944d9368550c319f0dfb2a29785cdfe8b011b583856d773b724",
                          "typeString": "literal_string \"Kon\""
                        },
                        "value": "Kon"
                      },
                      {
                        "hexValue": "697066733a2f2f555249",
                        "id": 34630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1299:12:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5c1e5a8ed1d0d9a7cd105173f4c4b7820af63ca92c507de52a57b212fe30933",
                          "typeString": "literal_string \"ipfs://URI\""
                        },
                        "value": "ipfs://URI"
                      },
                      {
                        "baseExpression": {
                          "id": 34631,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35082,
                          "src": "1319:4:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$6_storage",
                            "typeString": "address[6] storage ref"
                          }
                        },
                        "id": 34633,
                        "indexExpression": {
                          "id": 34632,
                          "name": "MSIG",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34895,
                          "src": "1324:4:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1319:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 34634,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35082,
                          "src": "1337:4:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$6_storage",
                            "typeString": "address[6] storage ref"
                          }
                        },
                        "id": 34636,
                        "indexExpression": {
                          "id": 34635,
                          "name": "BANK",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34898,
                          "src": "1342:4:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1337:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34639,
                            "name": "db",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35101,
                            "src": "1363:2:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Database_$569",
                              "typeString": "contract Database"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Database_$569",
                              "typeString": "contract Database"
                            }
                          ],
                          "id": 34638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1355:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34637,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1355:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1355:11:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_50000000000_by_1",
                              "typeString": "int_const 50000000000"
                            },
                            "id": 34645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "35305f303030",
                              "id": 34643,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1382:6:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50000_by_1",
                                "typeString": "int_const 50000"
                              },
                              "value": "50_000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "316536",
                              "id": 34644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1391:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "value": "1e6"
                            },
                            "src": "1382:12:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50000000000_by_1",
                              "typeString": "int_const 50000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_50000000000_by_1",
                              "typeString": "int_const 50000000000"
                            }
                          ],
                          "id": 34642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1374:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint128_$",
                            "typeString": "type(uint128)"
                          },
                          "typeName": {
                            "id": 34641,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "1374:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1374:21:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_50000000000_by_1",
                              "typeString": "int_const 50000000000"
                            },
                            "id": 34651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "35305f303030",
                              "id": 34649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1411:6:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50000_by_1",
                                "typeString": "int_const 50000"
                              },
                              "value": "50_000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "316536",
                              "id": 34650,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1420:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "value": "1e6"
                            },
                            "src": "1411:12:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50000000000_by_1",
                              "typeString": "int_const 50000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_50000000000_by_1",
                              "typeString": "int_const 50000000000"
                            }
                          ],
                          "id": 34648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1403:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint128_$",
                            "typeString": "type(uint128)"
                          },
                          "typeName": {
                            "id": 34647,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "1403:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1403:21:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34655,
                            "name": "StartDate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35021,
                            "src": "1439:9:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 34654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1432:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 34653,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1432:6:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1432:17:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34659,
                            "name": "StopDate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35026,
                            "src": "1464:8:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 34658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1457:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 34657,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1457:6:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1457:16:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_13dd5a3a50bad2722691d41aca95cedf21d0172cc981c718b7ee575cf764da2c",
                          "typeString": "literal_string \"KnkreteToken\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d00e6edda698944d9368550c319f0dfb2a29785cdfe8b011b583856d773b724",
                          "typeString": "literal_string \"Kon\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5c1e5a8ed1d0d9a7cd105173f4c4b7820af63ca92c507de52a57b212fe30933",
                          "typeString": "literal_string \"ipfs://URI\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 34619,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1168:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 34620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "1168:22:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 34661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1168:311:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1139:340:57"
                },
                {
                  "assignments": [
                    34665
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34665,
                      "mutability": "mutable",
                      "name": "vault6",
                      "nameLocation": "1501:6:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 34709,
                      "src": "1486:21:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IKonkreteVault_$4307",
                        "typeString": "contract IKonkreteVault"
                      },
                      "typeName": {
                        "id": 34664,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34663,
                          "name": "IKonkreteVault",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4307,
                          "src": "1486:14:57"
                        },
                        "referencedDeclaration": 4307,
                        "src": "1486:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IKonkreteVault_$4307",
                          "typeString": "contract IKonkreteVault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34684,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 34674,
                                    "name": "vaultInterface",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 35160,
                                    "src": "1600:14:57",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_KonkreteVault_$2267",
                                      "typeString": "contract KonkreteVault"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_KonkreteVault_$2267",
                                      "typeString": "contract KonkreteVault"
                                    }
                                  ],
                                  "id": 34673,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1592:7:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 34672,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1592:7:57",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 34675,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1592:23:57",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 34678,
                                    "name": "adminProxy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 35147,
                                    "src": "1635:10:57",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ProxyAdmin_$31486",
                                      "typeString": "contract ProxyAdmin"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ProxyAdmin_$31486",
                                      "typeString": "contract ProxyAdmin"
                                    }
                                  ],
                                  "id": 34677,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1627:7:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 34676,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1627:7:57",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 34679,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1627:19:57",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 34680,
                                "name": "initializing6",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34618,
                                "src": "1658:13:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 34671,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "1549:31:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_payable$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_TransparentUpgradeableProxy_$31634_$",
                                "typeString": "function (address,address,bytes memory) payable returns (contract TransparentUpgradeableProxy)"
                              },
                              "typeName": {
                                "id": 34670,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 34669,
                                  "name": "TransparentUpgradeableProxy",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 31634,
                                  "src": "1553:27:57"
                                },
                                "referencedDeclaration": 31634,
                                "src": "1553:27:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$31634",
                                  "typeString": "contract TransparentUpgradeableProxy"
                                }
                              }
                            },
                            "id": 34681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1549:132:57",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$31634",
                              "typeString": "contract TransparentUpgradeableProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$31634",
                              "typeString": "contract TransparentUpgradeableProxy"
                            }
                          ],
                          "id": 34668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1532:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34667,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1532:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1532:157:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34666,
                      "name": "IKonkreteVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4307,
                      "src": "1510:14:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IKonkreteVault_$4307_$",
                        "typeString": "type(contract IKonkreteVault)"
                      }
                    },
                    "id": 34683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1510:185:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IKonkreteVault_$4307",
                      "typeString": "contract IKonkreteVault"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1486:209:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 34692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 34686,
                              "name": "vault6",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34665,
                              "src": "1709:6:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IKonkreteVault_$4307",
                                "typeString": "contract IKonkreteVault"
                              }
                            },
                            "id": 34687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "decimals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4150,
                            "src": "1709:15:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                              "typeString": "function () view external returns (uint8)"
                            }
                          },
                          "id": 34688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1709:17:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 34689,
                              "name": "stable6",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34608,
                              "src": "1730:7:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20DecimalsMock_$630",
                                "typeString": "contract ERC20DecimalsMock"
                              }
                            },
                            "id": 34690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "decimals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 603,
                            "src": "1730:16:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                              "typeString": "function () view external returns (uint8)"
                            }
                          },
                          "id": 34691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1730:18:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "1709:39:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446563696d616c7320646966666572",
                        "id": 34693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1750:17:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_923110c0089da3a604aeca147c7d031be345a0800bee5d0159e6fcc9c48a5fc1",
                          "typeString": "literal_string \"Decimals differ\""
                        },
                        "value": "Decimals differ"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_923110c0089da3a604aeca147c7d031be345a0800bee5d0159e6fcc9c48a5fc1",
                          "typeString": "literal_string \"Decimals differ\""
                        }
                      ],
                      "id": 34685,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1701:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 34694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1701:67:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34695,
                  "nodeType": "ExpressionStatement",
                  "src": "1701:67:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 34705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 34697,
                              "name": "vault6",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34665,
                              "src": "1789:6:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IKonkreteVault_$4307",
                                "typeString": "contract IKonkreteVault"
                              }
                            },
                            "id": 34698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "originalPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4217,
                            "src": "1789:20:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 34699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1789:22:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 34704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 34700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1815:2:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 34701,
                                "name": "stable6",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34608,
                                "src": "1821:7:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20DecimalsMock_$630",
                                  "typeString": "contract ERC20DecimalsMock"
                                }
                              },
                              "id": 34702,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "decimals",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 603,
                              "src": "1821:16:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                "typeString": "function () view external returns (uint8)"
                              }
                            },
                            "id": 34703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1821:18:57",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "1815:24:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1789:50:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e67206d616e74697373612f6f726967696e616c207072696365",
                        "id": 34706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1847:31:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a0e377f7650ea99d657a07432611d361d88010e0c1bf231abbc15620739349f7",
                          "typeString": "literal_string \"Wrong mantissa/original price\""
                        },
                        "value": "Wrong mantissa/original price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a0e377f7650ea99d657a07432611d361d88010e0c1bf231abbc15620739349f7",
                          "typeString": "literal_string \"Wrong mantissa/original price\""
                        }
                      ],
                      "id": 34696,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1774:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 34707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1774:110:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34708,
                  "nodeType": "ExpressionStatement",
                  "src": "1774:110:57"
                }
              ]
            },
            "functionSelector": "a44c1ff5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test6Decimals",
            "nameLocation": "1035:13:57",
            "parameters": {
              "id": 34604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1048:2:57"
            },
            "returnParameters": {
              "id": 34605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1058:0:57"
            },
            "scope": 34866,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34804,
            "nodeType": "FunctionDefinition",
            "src": "1893:677:57",
            "nodes": [],
            "body": {
              "id": 34803,
              "nodeType": "Block",
              "src": "1948:622:57",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 34717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 34715,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34712,
                      "src": "1958:8:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "3735",
                      "id": 34716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1969:2:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_75_by_1",
                        "typeString": "int_const 75"
                      },
                      "value": "75"
                    },
                    "src": "1958:13:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34722,
                  "nodeType": "IfStatement",
                  "src": "1954:33:57",
                  "trueBody": {
                    "expression": {
                      "id": 34720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 34718,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34712,
                        "src": "1973:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "%=",
                      "rightHandSide": {
                        "hexValue": "3730",
                        "id": 34719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1985:2:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_70_by_1",
                          "typeString": "int_const 70"
                        },
                        "value": "70"
                      },
                      "src": "1973:14:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 34721,
                    "nodeType": "ExpressionStatement",
                    "src": "1973:14:57"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 34732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 34728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 34726,
                            "name": "decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34712,
                            "src": "2003:8:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 34727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2015:2:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "2003:14:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 34731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 34729,
                            "name": "decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34712,
                            "src": "2021:8:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "36",
                            "id": 34730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2033:1:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "src": "2021:13:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2003:31:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 34723,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6456,
                        "src": "1993:2:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$9404",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9379,
                      "src": "1993:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 34733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1993:42:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34734,
                  "nodeType": "ExpressionStatement",
                  "src": "1993:42:57"
                },
                {
                  "assignments": [
                    34737
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34737,
                      "mutability": "mutable",
                      "name": "stable",
                      "nameLocation": "2059:6:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 34803,
                      "src": "2041:24:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20DecimalsMock_$630",
                        "typeString": "contract ERC20DecimalsMock"
                      },
                      "typeName": {
                        "id": 34736,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34735,
                          "name": "ERC20DecimalsMock",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 630,
                          "src": "2041:17:57"
                        },
                        "referencedDeclaration": 630,
                        "src": "2041:17:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20DecimalsMock_$630",
                          "typeString": "contract ERC20DecimalsMock"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34745,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "6d6f636b",
                        "id": 34741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2090:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa88ac588f5b956d02c6098e901a7351ac7e50b41ac55814346d8c5f9ade6811",
                          "typeString": "literal_string \"mock\""
                        },
                        "value": "mock"
                      },
                      {
                        "hexValue": "6d6f636b",
                        "id": 34742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2098:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa88ac588f5b956d02c6098e901a7351ac7e50b41ac55814346d8c5f9ade6811",
                          "typeString": "literal_string \"mock\""
                        },
                        "value": "mock"
                      },
                      {
                        "id": 34743,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34712,
                        "src": "2106:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_fa88ac588f5b956d02c6098e901a7351ac7e50b41ac55814346d8c5f9ade6811",
                          "typeString": "literal_string \"mock\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa88ac588f5b956d02c6098e901a7351ac7e50b41ac55814346d8c5f9ade6811",
                          "typeString": "literal_string \"mock\""
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 34740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2068:21:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_ERC20DecimalsMock_$630_$",
                        "typeString": "function (string memory,string memory,uint8) returns (contract ERC20DecimalsMock)"
                      },
                      "typeName": {
                        "id": 34739,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34738,
                          "name": "ERC20DecimalsMock",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 630,
                          "src": "2072:17:57"
                        },
                        "referencedDeclaration": 630,
                        "src": "2072:17:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20DecimalsMock_$630",
                          "typeString": "contract ERC20DecimalsMock"
                        }
                      }
                    },
                    "id": 34744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2068:47:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20DecimalsMock_$630",
                      "typeString": "contract ERC20DecimalsMock"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2041:74:57"
                },
                {
                  "assignments": [
                    34747
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34747,
                      "mutability": "mutable",
                      "name": "initializing_",
                      "nameLocation": "2135:13:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 34803,
                      "src": "2122:26:57",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 34746,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2122:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34788,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 34750,
                            "name": "IKonkreteVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4307,
                            "src": "2181:14:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IKonkreteVault_$4307_$",
                              "typeString": "type(contract IKonkreteVault)"
                            }
                          },
                          "id": 34751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "initialize",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4195,
                          "src": "2181:25:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_uint128_$_t_uint128_$_t_uint32_$_t_uint32_$returns$__$",
                            "typeString": "function IKonkreteVault.initialize(address,string memory,string memory,string memory,address,address,address,uint128,uint128,uint32,uint32)"
                          }
                        },
                        "id": 34752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "2181:34:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34755,
                            "name": "stable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34737,
                            "src": "2231:6:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20DecimalsMock_$630",
                              "typeString": "contract ERC20DecimalsMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20DecimalsMock_$630",
                              "typeString": "contract ERC20DecimalsMock"
                            }
                          ],
                          "id": 34754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2223:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34753,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2223:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2223:15:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4b6e6b72657465546f6b656e",
                        "id": 34757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2246:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13dd5a3a50bad2722691d41aca95cedf21d0172cc981c718b7ee575cf764da2c",
                          "typeString": "literal_string \"KnkreteToken\""
                        },
                        "value": "KnkreteToken"
                      },
                      {
                        "hexValue": "4b6f6e",
                        "id": 34758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2268:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d00e6edda698944d9368550c319f0dfb2a29785cdfe8b011b583856d773b724",
                          "typeString": "literal_string \"Kon\""
                        },
                        "value": "Kon"
                      },
                      {
                        "hexValue": "697066733a2f2f555249",
                        "id": 34759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2281:12:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5c1e5a8ed1d0d9a7cd105173f4c4b7820af63ca92c507de52a57b212fe30933",
                          "typeString": "literal_string \"ipfs://URI\""
                        },
                        "value": "ipfs://URI"
                      },
                      {
                        "baseExpression": {
                          "id": 34760,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35082,
                          "src": "2301:4:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$6_storage",
                            "typeString": "address[6] storage ref"
                          }
                        },
                        "id": 34762,
                        "indexExpression": {
                          "id": 34761,
                          "name": "MSIG",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34895,
                          "src": "2306:4:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2301:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34765,
                            "name": "db",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35101,
                            "src": "2327:2:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Database_$569",
                              "typeString": "contract Database"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Database_$569",
                              "typeString": "contract Database"
                            }
                          ],
                          "id": 34764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2319:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34763,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2319:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2319:11:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_50000000000_by_1",
                              "typeString": "int_const 50000000000"
                            },
                            "id": 34771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "35305f303030",
                              "id": 34769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2346:6:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50000_by_1",
                                "typeString": "int_const 50000"
                              },
                              "value": "50_000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "316536",
                              "id": 34770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2355:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "value": "1e6"
                            },
                            "src": "2346:12:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50000000000_by_1",
                              "typeString": "int_const 50000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_50000000000_by_1",
                              "typeString": "int_const 50000000000"
                            }
                          ],
                          "id": 34768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2338:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint128_$",
                            "typeString": "type(uint128)"
                          },
                          "typeName": {
                            "id": 34767,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "2338:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2338:21:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_50000000000_by_1",
                              "typeString": "int_const 50000000000"
                            },
                            "id": 34777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "35305f303030",
                              "id": 34775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2375:6:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50000_by_1",
                                "typeString": "int_const 50000"
                              },
                              "value": "50_000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "316536",
                              "id": 34776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2384:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "value": "1e6"
                            },
                            "src": "2375:12:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50000000000_by_1",
                              "typeString": "int_const 50000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_50000000000_by_1",
                              "typeString": "int_const 50000000000"
                            }
                          ],
                          "id": 34774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2367:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint128_$",
                            "typeString": "type(uint128)"
                          },
                          "typeName": {
                            "id": 34773,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "2367:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2367:21:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34781,
                            "name": "StartDate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35021,
                            "src": "2403:9:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 34780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2396:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 34779,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2396:6:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2396:17:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34785,
                            "name": "StopDate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35026,
                            "src": "2428:8:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 34784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2421:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 34783,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2421:6:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2421:16:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_13dd5a3a50bad2722691d41aca95cedf21d0172cc981c718b7ee575cf764da2c",
                          "typeString": "literal_string \"KnkreteToken\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d00e6edda698944d9368550c319f0dfb2a29785cdfe8b011b583856d773b724",
                          "typeString": "literal_string \"Kon\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5c1e5a8ed1d0d9a7cd105173f4c4b7820af63ca92c507de52a57b212fe30933",
                          "typeString": "literal_string \"ipfs://URI\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 34748,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2151:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 34749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "2151:22:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 34787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2151:292:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2122:321:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34794,
                            "name": "vaultInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35160,
                            "src": "2496:14:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KonkreteVault_$2267",
                              "typeString": "contract KonkreteVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_KonkreteVault_$2267",
                              "typeString": "contract KonkreteVault"
                            }
                          ],
                          "id": 34793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2488:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34792,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2488:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2488:23:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34798,
                            "name": "adminProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35147,
                            "src": "2527:10:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ProxyAdmin_$31486",
                              "typeString": "contract ProxyAdmin"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ProxyAdmin_$31486",
                              "typeString": "contract ProxyAdmin"
                            }
                          ],
                          "id": 34797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2519:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34796,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2519:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2519:19:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34800,
                        "name": "initializing_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34747,
                        "src": "2546:13:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 34791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2449:31:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_TransparentUpgradeableProxy_$31634_$",
                        "typeString": "function (address,address,bytes memory) payable returns (contract TransparentUpgradeableProxy)"
                      },
                      "typeName": {
                        "id": 34790,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34789,
                          "name": "TransparentUpgradeableProxy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 31634,
                          "src": "2453:27:57"
                        },
                        "referencedDeclaration": 31634,
                        "src": "2453:27:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$31634",
                          "typeString": "contract TransparentUpgradeableProxy"
                        }
                      }
                    },
                    "id": 34801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2449:116:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$31634",
                      "typeString": "contract TransparentUpgradeableProxy"
                    }
                  },
                  "id": 34802,
                  "nodeType": "ExpressionStatement",
                  "src": "2449:116:57"
                }
              ]
            },
            "functionSelector": "03849855",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFailOthersDecimals",
            "nameLocation": "1902:22:57",
            "parameters": {
              "id": 34713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34712,
                  "mutability": "mutable",
                  "name": "decimals",
                  "nameLocation": "1931:8:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 34804,
                  "src": "1925:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 34711,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1925:5:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1924:16:57"
            },
            "returnParameters": {
              "id": 34714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1948:0:57"
            },
            "scope": 34866,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34865,
            "nodeType": "FunctionDefinition",
            "src": "2574:496:57",
            "nodes": [],
            "body": {
              "id": 34864,
              "nodeType": "Block",
              "src": "2619:451:57",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34808,
                      "mutability": "mutable",
                      "name": "initializing_",
                      "nameLocation": "2638:13:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 34864,
                      "src": "2625:26:57",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 34807,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2625:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34849,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 34811,
                            "name": "IKonkreteVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4307,
                            "src": "2684:14:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IKonkreteVault_$4307_$",
                              "typeString": "type(contract IKonkreteVault)"
                            }
                          },
                          "id": 34812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "initialize",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4195,
                          "src": "2684:25:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_uint128_$_t_uint128_$_t_uint32_$_t_uint32_$returns$__$",
                            "typeString": "function IKonkreteVault.initialize(address,string memory,string memory,string memory,address,address,address,uint128,uint128,uint32,uint32)"
                          }
                        },
                        "id": 34813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "2684:34:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "373737",
                            "id": 34816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2734:3:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_777_by_1",
                              "typeString": "int_const 777"
                            },
                            "value": "777"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_777_by_1",
                              "typeString": "int_const 777"
                            }
                          ],
                          "id": 34815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2726:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34814,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2726:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2726:12:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4b6e6b72657465546f6b656e",
                        "id": 34818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2746:14:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13dd5a3a50bad2722691d41aca95cedf21d0172cc981c718b7ee575cf764da2c",
                          "typeString": "literal_string \"KnkreteToken\""
                        },
                        "value": "KnkreteToken"
                      },
                      {
                        "hexValue": "4b6f6e",
                        "id": 34819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2768:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d00e6edda698944d9368550c319f0dfb2a29785cdfe8b011b583856d773b724",
                          "typeString": "literal_string \"Kon\""
                        },
                        "value": "Kon"
                      },
                      {
                        "hexValue": "697066733a2f2f555249",
                        "id": 34820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2781:12:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5c1e5a8ed1d0d9a7cd105173f4c4b7820af63ca92c507de52a57b212fe30933",
                          "typeString": "literal_string \"ipfs://URI\""
                        },
                        "value": "ipfs://URI"
                      },
                      {
                        "baseExpression": {
                          "id": 34821,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35082,
                          "src": "2801:4:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$6_storage",
                            "typeString": "address[6] storage ref"
                          }
                        },
                        "id": 34823,
                        "indexExpression": {
                          "id": 34822,
                          "name": "MSIG",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34895,
                          "src": "2806:4:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2801:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34826,
                            "name": "db",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35101,
                            "src": "2827:2:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Database_$569",
                              "typeString": "contract Database"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Database_$569",
                              "typeString": "contract Database"
                            }
                          ],
                          "id": 34825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2819:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34824,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2819:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2819:11:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_50000000000_by_1",
                              "typeString": "int_const 50000000000"
                            },
                            "id": 34832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "35305f303030",
                              "id": 34830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2846:6:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50000_by_1",
                                "typeString": "int_const 50000"
                              },
                              "value": "50_000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "316536",
                              "id": 34831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2855:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "value": "1e6"
                            },
                            "src": "2846:12:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50000000000_by_1",
                              "typeString": "int_const 50000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_50000000000_by_1",
                              "typeString": "int_const 50000000000"
                            }
                          ],
                          "id": 34829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2838:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint128_$",
                            "typeString": "type(uint128)"
                          },
                          "typeName": {
                            "id": 34828,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "2838:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2838:21:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_50000000000_by_1",
                              "typeString": "int_const 50000000000"
                            },
                            "id": 34838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "35305f303030",
                              "id": 34836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2875:6:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50000_by_1",
                                "typeString": "int_const 50000"
                              },
                              "value": "50_000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "316536",
                              "id": 34837,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2884:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "value": "1e6"
                            },
                            "src": "2875:12:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50000000000_by_1",
                              "typeString": "int_const 50000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_50000000000_by_1",
                              "typeString": "int_const 50000000000"
                            }
                          ],
                          "id": 34835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2867:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint128_$",
                            "typeString": "type(uint128)"
                          },
                          "typeName": {
                            "id": 34834,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "2867:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2867:21:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34842,
                            "name": "StartDate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35021,
                            "src": "2903:9:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 34841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2896:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 34840,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2896:6:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2896:17:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34846,
                            "name": "StopDate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35026,
                            "src": "2928:8:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 34845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2921:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 34844,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2921:6:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2921:16:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_13dd5a3a50bad2722691d41aca95cedf21d0172cc981c718b7ee575cf764da2c",
                          "typeString": "literal_string \"KnkreteToken\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d00e6edda698944d9368550c319f0dfb2a29785cdfe8b011b583856d773b724",
                          "typeString": "literal_string \"Kon\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5c1e5a8ed1d0d9a7cd105173f4c4b7820af63ca92c507de52a57b212fe30933",
                          "typeString": "literal_string \"ipfs://URI\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 34809,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2654:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 34810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "src": "2654:22:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 34848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2654:289:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2625:318:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34855,
                            "name": "vaultInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35160,
                            "src": "2996:14:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KonkreteVault_$2267",
                              "typeString": "contract KonkreteVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_KonkreteVault_$2267",
                              "typeString": "contract KonkreteVault"
                            }
                          ],
                          "id": 34854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2988:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34853,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2988:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2988:23:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 34859,
                            "name": "adminProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35147,
                            "src": "3027:10:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ProxyAdmin_$31486",
                              "typeString": "contract ProxyAdmin"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ProxyAdmin_$31486",
                              "typeString": "contract ProxyAdmin"
                            }
                          ],
                          "id": 34858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3019:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 34857,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3019:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3019:19:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34861,
                        "name": "initializing_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34808,
                        "src": "3046:13:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 34852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2949:31:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_TransparentUpgradeableProxy_$31634_$",
                        "typeString": "function (address,address,bytes memory) payable returns (contract TransparentUpgradeableProxy)"
                      },
                      "typeName": {
                        "id": 34851,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 34850,
                          "name": "TransparentUpgradeableProxy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 31634,
                          "src": "2953:27:57"
                        },
                        "referencedDeclaration": 31634,
                        "src": "2953:27:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$31634",
                          "typeString": "contract TransparentUpgradeableProxy"
                        }
                      }
                    },
                    "id": 34862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2949:116:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TransparentUpgradeableProxy_$31634",
                      "typeString": "contract TransparentUpgradeableProxy"
                    }
                  },
                  "id": 34863,
                  "nodeType": "ExpressionStatement",
                  "src": "2949:116:57"
                }
              ]
            },
            "functionSelector": "8ea07bf5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFailNoDecimalsFunction",
            "nameLocation": "2583:26:57",
            "parameters": {
              "id": 34805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2609:2:57"
            },
            "returnParameters": {
              "id": 34806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2619:0:57"
            },
            "scope": 34866,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34495,
              "name": "ContractTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35438,
              "src": "132:12:57"
            },
            "id": 34496,
            "nodeType": "InheritanceSpecifier",
            "src": "132:12:57"
          }
        ],
        "canonicalName": "CheckMantissa",
        "contractDependencies": [
          569,
          630,
          2267,
          31486,
          31634,
          34912
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          34866,
          35438,
          7685,
          6457,
          6428
        ],
        "name": "CheckMantissa",
        "nameLocation": "115:13:57",
        "scope": 34867,
        "usedErrors": []
      }
    ]
  },
  "id": 57
}